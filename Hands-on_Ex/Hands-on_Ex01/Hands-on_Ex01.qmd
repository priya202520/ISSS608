---
title: "Hands-on_Ex01"
---

# **A Layered Grammar of Graphics: ggplot2 methods**

![](images/Screenshot%202025-01-16%20224655.png)

**1.1 Importing data**

```{r}
library(readr) # Load the readr library
exam_data <- read_csv("data/Exam_data.csv")

```

```{r}
library(ggplot2)
```

**1.2 Histogram using ggplot**

```{r}
ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=8, 
                 boundary = 100,
                 color="black", 
                 fill="pink") +
  ggtitle("Distribution of Maths scores")
```

**1.3 Essential Grammatical Elements in ggplot2: data**

```{r}
ggplot(data=exam_data)
```

**1.4 Essential Grammatical Elements in ggplot2: Aesthetic mappings**

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS))
```

**1.5 Essential Grammatical Elements in ggplot2: geom**

**1.5.1 Geometric Objects: geom_bar**

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar(bins=8, 
                 boundary = 100,
                 color="black", 
                 fill="yellow")
```

**1.5.2 Geometric Objects: geom_dotplot**

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(dotsize = 0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)  
```

**1.5.3 Geometric Objects: `geom_histogram()`**

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram(bins=30)       
```

**1.5.4 Modifying a geometric object by changing `geom()`**

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")  
```

**1.5.5 Modifying a geometric object by changing *aes()***

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30")
```

**1.5.6 Geometric Objects: geom-density()**

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density()           
```

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS, 
           colour = GENDER)) +
  geom_density()
```

**1.5.7 Geometric Objects: geom_boxplot**

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS,       
           x= GENDER)) +    
  geom_boxplot()            
```

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot(notch=TRUE)
```

**1.5.8 Geometric Objects: geom_violin**

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()
```

**1.5.9 Geometric Objects: geom_point()**

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point()            
```

**1.5.10 *geom* objects can be combined**

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot() +                    
  geom_point(position="jitter", 
             size = 0.5)        
```

**1.6 Essential Grammatical Elements in ggplot2: stat**

**1.6.1 Working with stat()**

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot()
```

**1.6.2 Working with stat - the *stat_summary()* method**

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  stat_summary(geom = "point",       
               fun = "mean",         
               colour ="red",        
               size=4)               
```

**1.6.3 Working with stat - the `geom()` method**

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",        
             fun="mean",           
             colour="red",          
             size=4)          
```

**1.6.4 Adding a best fit curve on a scatterplot?**

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(size=0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              linewidth=0.5)
```

**1.7 Essential Grammatical Elements in ggplot2: Facets**

**1.7.1 Working with `facet_wrap()`**

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_wrap(~ CLASS)
```

**1.7.2 `facet_grid()` function**

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_grid(~ CLASS)
```

**1.8 Essential Grammatical Elements in ggplot2: Coordinates**

**1.8.1 Working with Coordinate**

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()
```

**1.8.2 Changing the y- and x-axis range**

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, size=0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
```

**1.9 Essential Grammatical Elements in ggplot2: themes**

**1.9.1 Working with theme**

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_gray()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_classic()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_minimal()
```
