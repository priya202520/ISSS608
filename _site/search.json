[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/about.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "2.1 Installing and loading the required libraries\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n2.2 Importing data\n\nlibrary(readr) # Load the readr library\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2.3.1 Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\",color=\"red\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n2.4.1 Working with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"red\", \n                 fill=\"black\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"red\", \n                 fill=\"black\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n2.4.2 Working with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n2.5.1 Creating Composite Graphics: pathwork methods\n2.5.2 Combining two ggplot2 graphs\n\np1 + p2\n\n\n\n\n\n\n\n\n2.5.3 Combining three ggplot2 graphs\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2.5.4 Creating a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2.5.5 Creating figure with insert\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2.5.6 Creating a composite figure by using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-fundamentals",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-fundamentals",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "2.1 Installing and loading the required libraries\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n2.2 Importing data\n\nlibrary(readr) # Load the readr library\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2.3.1 Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\",color=\"red\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n2.4.1 Working with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"red\", \n                 fill=\"black\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"red\", \n                 fill=\"black\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n2.4.2 Working with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n2.5.1 Creating Composite Graphics: pathwork methods\n2.5.2 Combining two ggplot2 graphs\n\np1 + p2\n\n\n\n\n\n\n\n\n2.5.3 Combining three ggplot2 graphs\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2.5.4 Creating a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2.5.5 Creating figure with insert\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n2.5.6 Creating a composite figure by using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "3  Programming Interactive Data Visualisation with R\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n3.1 Importing data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n3.2 Interactive Data Visualisation - ggiraph methods\n3.2.1 Tooltip effect with tooltip aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n3.3 Interactivity\n3.3.1 Displaying multiple information on tooltip\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n3.4 Interactivity\n3.4.1 Customising Tooltip style\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n3.4.2 Displaying statistics on tooltip\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n3.4.3 Hover effect with data_id aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n3.4,4 Styling hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n3.4.5 Combining tooltip and hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n3.4.6 Click effect with onclick\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n3.4.7 Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n3.5 Interactive Data Visualisation - plotly methods!\n3.5.1 Creating an interactive scatter plot: plot_ly() method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n3.5.2 Working with visual variable: plot_ly() method\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n3.5.3 Creating an interactive scatter plot: ggplotly() method\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n3.5.4 Coordinated Multiple Views with plotly\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n3..6 Interactive Data Visualisation - crosstalk methods!\n3.6.1 Interactive Data Table: DT package\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n3.6.2 Linked brushing: crosstalk method\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4  Programming Animated Statistical Graphics with R\n4.1 Loading the R packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n4.2 Importing the data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\nWarning: `mutate_each_()` was deprecated in dplyr 0.7.0.\nℹ Please use `across()` instead.\n\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\n4.3 Animated Data Visualisation: gganimate methods\n4.3.1 Building a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n4.3.2 Building the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n\n\n\n\n4.4 Animated Data Visualisation: plotly\n4.4.1 Building an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(gg)\n\nWarning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n4.4.2 Building an animated bubble plot: plot_ly() method\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications!"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on_Ex01",
    "section": "",
    "text": "A Layered Grammar of Graphics: ggplot2 methods\n\n1.1 Importing data\n\nlibrary(readr) # Load the readr library\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nlibrary(ggplot2)\n\n1.2 Histogram using ggplot\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=8, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"pink\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n1.3 Essential Grammatical Elements in ggplot2: data\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n1.4 Essential Grammatical Elements in ggplot2: Aesthetic mappings\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n\n1.5 Essential Grammatical Elements in ggplot2: geom\n1.5.1 Geometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar(bins=8, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"yellow\")\n\nWarning in geom_bar(bins = 8, boundary = 100, color = \"black\", fill =\n\"yellow\"): Ignoring unknown parameters: `bins` and `boundary`\n\n\n\n\n\n\n\n\n\n1.5.2 Geometric Objects: geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\n1.5.3 Geometric Objects: geom_histogram()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=30)       \n\n\n\n\n\n\n\n\n1.5.4 Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\n1.5.5 Modifying a geometric object by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n1.5.6 Geometric Objects: geom-density()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\n1.5.7 Geometric Objects: geom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n1.5.8 Geometric Objects: geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\n1.5.9 Geometric Objects: geom_point()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n\n1.5.10 geom objects can be combined\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n\n1.6 Essential Grammatical Elements in ggplot2: stat\n1.6.1 Working with stat()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n1.6.2 Working with stat - the stat_summary() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\n\n\n\n1.6.3 Working with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)          \n\n\n\n\n\n\n\n\n1.6.4 Adding a best fit curve on a scatterplot?\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n1.7 Essential Grammatical Elements in ggplot2: Facets\n1.7.1 Working with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\n1.7.2 facet_grid() function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\n\n\n1.8 Essential Grammatical Elements in ggplot2: Coordinates\n1.8.1 Working with Coordinate\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\n1.8.2 Changing the y- and x-axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n1.9 Essential Grammatical Elements in ggplot2: themes\n1.9.1 Working with theme\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "",
    "text": "Loading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#getting-started",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "",
    "text": "Loading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Importing data",
    "text": "Importing data\nCode chunj below uses read_csv() of readr to import REALIS2019.csv into r environment as a tibble data.frame.\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Pivoting data",
    "text": "Pivoting data\n\npopdata_long &lt;- popdata_fat %&gt;%\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\")\n\n\nwrite_rds(popdata_long,\"rds/popdata_long.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Working with dplyr",
    "text": "Working with dplyr\n\nrealis2019_selected &lt;- realis2019 %&gt;%\nselect(`Project Name`,\n`Transacted Price ($)`,\n`Type of Sale`,\n`Unit Price ($ psm)`,\n`Property Type`)\nrealis2019_selected\n\n# A tibble: 19,515 × 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   &lt;chr&gt;                               &lt;dbl&gt; &lt;chr&gt;                         &lt;dbl&gt;\n 1 PEIRCE VIEW                        840000 Resale                         7434\n 2 FLORIDA PARK                      3040000 Resale                         9737\n 3 BULLION PARK                       860000 Resale                        11467\n 4 CASTLE GREEN                      1000000 Resale                         9346\n 5 HAPPY ESTATE                      7000000 Resale                        10183\n 6 TEACHER'S HOUSING…                2880000 Resale                        12659\n 7 THE PANORAMA                      1510000 Resale                        16064\n 8 THE PANORAMA                       710000 Resale                        16905\n 9 CHIP THYE GARDEN                  2800000 Resale                        13500\n10 TEACHER'S HOUSING…                2300000 Resale                         9935\n# ℹ 19,505 more rows\n# ℹ 1 more variable: `Property Type` &lt;chr&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-filter-of-dplyr.",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-filter-of-dplyr.",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Working with filter() of dplyr.",
    "text": "Working with filter() of dplyr.\n\nrealis2019_filtered &lt;- realis2019_selected %&gt;%\nfilter(`Property Type` ==\"Condominium\" |\n`Property Type`== \"Apartment\") %&gt;%\nfilter(`Type of Sale` == \"New Sale\") %&gt;%\nfilter(`Unit Price ($ psm)` &lt;= 13000)\n\n\nPutting all togther"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr-1",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr-1",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Working with dplyr",
    "text": "Working with dplyr\n\nrealis2019_selected &lt;- realis2019 %&gt;%\nselect(`Project Name`,\n`Transacted Price ($)`,\n`Type of Sale`,\n`Unit Price ($ psm)`,\n`Property Type`) %&gt;% \nfilter(`Property Type` ==\"Condominium\" |\n`Property Type`== \"Apartment\") %&gt;%\nfilter(`Type of Sale` == \"New Sale\") %&gt;%\nfilter(`Unit Price ($ psm)` &lt;= 13000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Exercise 4",
    "section": "",
    "text": "4.1.1 Loading packages\n\n  pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n4.1.2 Data Import\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n4.1.3 Visualising Distribution with Ridgeline Plot(Joyplot) : ggridges method\nA ridgeline plot using ggridges in R is created with geom_density_ridges(), which visualizes the distribution of a numeric variable across multiple categories by stacking smoothed density plots.\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#C8A2C8\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n4.1.4 Varying fill colors along the x axis\nIn ggridges, you can vary fill colors along the x-axis by mapping a continuous variable to fill inside aes(), and using scale_fill_gradient() or scale_fill_viridis_c() to apply a color gradient.\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n4.1.5 Mapping the probabilities directly onto colour\nIn ggridges, you can map probabilities directly onto color by setting fill inside aes() to ..scaled.. or stat(density), and then using scale_fill_gradient() to apply a color scale.\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n4.1.6 Ridgeline plots with quantile lines\nIn ggridges, you can add quantile lines to ridgeline plots by using geom_density_ridges(quantile_lines = TRUE, quantiles = c(0.25, 0.5, 0.75)) to display median and quartiles.\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n       )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE\n  ) +\n  scale_fill_brewer(palette = \"Set2\", name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#C8A2C8\", \"#FFD700\", \"#FF8C00\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n4.2 Visualising Distribution with Raincloud Plot\nA Raincloud plot combines a violin plot, box plot, and raw jittered data points to provide a detailed visualization of a distribution, typically created in R using the ggplot2 and ggdist packages.\n4.2.1 Plotting a Half Eye graph\nA Half-Eye plot in R, created using ggdist::stat_halfeye(), visualizes a distribution with a density plot, point interval, and optional slab to highlight key summary statistics.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = \"#C8A2C8\")\n\n\n\n\n\n\n\n\n4.2.2 Adding the boxplot with geom_boxplot()\nYou can add a boxplot to a Half-Eye plot by including geom_boxplot(width = 0.2, outlier.shape = NA) to display summary statistics without overlapping outliers.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = \"#C8A2C8\") +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\n4.2.3 Adding the Dot Plots with stat_dots()\nYou can add dot plots to a Half-Eye plot by including stat_dots(side = \"left\", dotsize = 0.5) to show individual data points alongside the density.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 0.5)\n\n\n\n\n\n\n\n\n4.2.4 Finishing touch\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "title": "Hands-on_Exercise 4",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\n\n12.4.1 FunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n12.4.2 FunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n12.4.3 FunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on_Exercise 4",
    "section": "12.5 Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "12.5 Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\n12.5.1 Computing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\n12.5.2 Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\n12.5.3 Plotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\n\n\n\n12.5.4 Interactive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In_Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04/In_Class_Ex04.html",
    "title": "In-class_Exercise 4",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidyverse, tidymodels)\n\n\n\n\nexam_data &lt;- read_csv(\"Exam_data.csv\")\n\n\nggplot(data = exam_data,\n        aes(x= ENGLISH,\n            y= CLASS)) +\n      geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on_Exercise 5",
    "section": "",
    "text": "Ternary plots are a way of displaying the distribution and variability of three-part compositional data\n\n\n\npacman::p_load(plotly, ggtern, tidyverse)\n\n\n\n\n\n\n\n#Reading the data into R environment\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#creating-ternary-plot-with-r",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#creating-ternary-plot-with-r",
    "title": "Hands-on_Exercise 5",
    "section": "",
    "text": "Ternary plots are a way of displaying the distribution and variability of three-part compositional data\n\n\n\npacman::p_load(plotly, ggtern, tidyverse)\n\n\n\n\n\n\n\n#Reading the data into R environment\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-1",
    "title": "Hands-on_Exercise 5",
    "section": "6.2 Installing and Launching R Packages",
    "text": "6.2 Installing and Launching R Packages\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)\n\n\n6.3.1 Importing Data\n\nwine &lt;- read_csv(\"data/wine_quality.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#building-correlation-matrix-pairs-method",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#building-correlation-matrix-pairs-method",
    "title": "Hands-on_Exercise 5",
    "section": "6.4 Building Correlation Matrix: pairs() method",
    "text": "6.4 Building Correlation Matrix: pairs() method\n\n6.4.1 Building a basic correlation matrix\n\npairs(wine[,1:11])\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\n\n\n\n\n\n6.4.2 Drawing the lower corner\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\n\n\n\n\n6.4.3 Including with correlation coefficients\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-correlation-matrix-ggcormat",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-correlation-matrix-ggcormat",
    "title": "Hands-on_Exercise 5",
    "section": "6.5 Visualising Correlation Matrix: ggcormat()",
    "text": "6.5 Visualising Correlation Matrix: ggcormat()\n\n6.5.1 The basic plot\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p &lt; 0.05\"\n)\n\n\n\n\n\n\n\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#building-multiple-plots",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#building-multiple-plots",
    "title": "Hands-on_Exercise 5",
    "section": "6.6 Building multiple plots",
    "text": "6.6 Building multiple plots\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-correlation-matrix-using-corrplot-package",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-correlation-matrix-using-corrplot-package",
    "title": "Hands-on_Exercise 5",
    "section": "6.7 Visualising Correlation Matrix using corrplot Package",
    "text": "6.7 Visualising Correlation Matrix using corrplot Package\n\n6.7.1 Getting started with corrplot\n\nwine.cor &lt;- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\n\n\n\n\n\n\n6.7.2 Working with visual geometrics\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\n\n6.7.3 Working with layout\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\n6.7.4 Working with mixed layout\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\n6.7.5 Combining corrgram with the significant test\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\n\n\n\n\n\n6.7.6 Reorder a corrgram\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\n6.7.7 Reordering a correlation matrix using hclust\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)\n\n\n\n\n\n\n\n\n7 Heatmap for Visualising and Analysing Multivariate Data"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-2",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-2",
    "title": "Hands-on_Exercise 5",
    "section": "14.2 Installing and Launching R Packages",
    "text": "14.2 Installing and Launching R Packages\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\n14.3.1 Importing the data set\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\n\n14.3.2 Preparing the data\n\nrow.names(wh) &lt;- wh$Country\n\n\n\n14.3.3 Transforming the data frame into a matrix\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#static-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#static-heatmap",
    "title": "Hands-on_Exercise 5",
    "section": "14.4 Static Heatmap",
    "text": "14.4 Static Heatmap\n\n14.4.1 heatmap() of R Stats\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#creating-interactive-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#creating-interactive-heatmap",
    "title": "Hands-on_Exercise 5",
    "section": "14.5 Creating Interactive Heatmap",
    "text": "14.5 Creating Interactive Heatmap\n\n14.5.1 Working with heatmaply\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\n\n14.5.2 Data trasformation\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\n14.5.2.2 Normalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\n14.5.2.3 Percentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\n\n14.5.3 Clustering algorithm\n\n\n14.5.4 Manual approach\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\n14.5.5 Statistical approach\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)\n\n\n\n\n\n\n\n14.5.6 Seriation\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")\n\n\n\n\n\n\n\n14.5.7 Working with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\n\n\n14.5.8 The finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-3",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-3",
    "title": "Hands-on_Exercise 5",
    "section": "15.2 Installing and Launching R Packages",
    "text": "15.2 Installing and Launching R Packages\n\npacman::p_load(GGally, parallelPlot, tidyverse)\n\npackage 'parallelPlot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\rbu93\\AppData\\Local\\Temp\\RtmpkJEhOB\\downloaded_packages"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation-1",
    "title": "Hands-on_Exercise 5",
    "section": "15.3 Data Preparation",
    "text": "15.3 Data Preparation\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-static-parallel-coordinates-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-static-parallel-coordinates-plot",
    "title": "Hands-on_Exercise 5",
    "section": "15.4 Plotting Static Parallel Coordinates Plot",
    "text": "15.4 Plotting Static Parallel Coordinates Plot\n\n15.4.1 Plotting a simple parallel coordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\n\n\n\n\n15.4.2 Plotting a parallel coordinates with boxplot\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\n\n\n\n\n\n\n15.4.3 Parallel coordinates with facet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\n\n\n\n\n\n15.4.4 Rotating x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\n\n15.4.5 Adjusting the rotated x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "title": "Hands-on_Exercise 5",
    "section": "15.5 Plotting Interactive Parallel Coordinates Plot: parallelPlot methods",
    "text": "15.5 Plotting Interactive Parallel Coordinates Plot: parallelPlot methods\n\n15.5.1 The basic plot\n\nwh &lt;- wh %&gt;%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\n\n15.5.2 Rotate axis label\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\n15.5.3 Changing the colour scheme\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\n15.5.4 Parallel coordinates plot with histogram\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-4",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages-4",
    "title": "Hands-on_Exercise 5",
    "section": "16.2 Installing and Launching R Packages",
    "text": "16.2 Installing and Launching R Packages\n\npacman::p_load(treemap, treemapify, tidyverse) \n\n\n16.3.1 Importing the data set\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")\n\n\n\n16.3.2 Data Wrangling and Manipulation\n\n\n16.3.3 Grouped summaries without the Pipe\n\nrealis2018_grouped &lt;- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised &lt;- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\n\n16.3.4 Grouped summaries with the pipe\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#designing-treemap-with-treemap-package",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#designing-treemap-with-treemap-package",
    "title": "Hands-on_Exercise 5",
    "section": "16.4 Designing Treemap with treemap Package",
    "text": "16.4 Designing Treemap with treemap Package"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html",
    "title": "In-Class_Exercise 5",
    "section": "",
    "text": "In-Class Exercise 5 - Visual Analytics\nGetting started\n\npacman::p_load(tidyverse, readxl, SmartEDA, easystats, gtsummary, ggstatsplot)\n\nImporting Data\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla - Copy.xls\",\"data\")\n\n\nsummary(car_resale)\n\n       Id            Model               Price         Age_08_04    \n Min.   :   1.0   Length:1436        Min.   : 4350   Min.   : 1.00  \n 1st Qu.: 361.8   Class :character   1st Qu.: 8450   1st Qu.:44.00  \n Median : 721.5   Mode  :character   Median : 9900   Median :61.00  \n Mean   : 721.6                      Mean   :10731   Mean   :55.95  \n 3rd Qu.:1081.2                      3rd Qu.:11950   3rd Qu.:70.00  \n Max.   :1442.0                      Max.   :32500   Max.   :80.00  \n   Mfg_Month         Mfg_Year          KM         Quarterly_Tax   \n Min.   : 1.000   Min.   :1998   Min.   :     1   Min.   : 19.00  \n 1st Qu.: 3.000   1st Qu.:1998   1st Qu.: 43000   1st Qu.: 69.00  \n Median : 5.000   Median :1999   Median : 63390   Median : 85.00  \n Mean   : 5.549   Mean   :2000   Mean   : 68533   Mean   : 87.12  \n 3rd Qu.: 8.000   3rd Qu.:2001   3rd Qu.: 87021   3rd Qu.: 85.00  \n Max.   :12.000   Max.   :2004   Max.   :243000   Max.   :283.00  \n     Weight     Guarantee_Period    HP_Bin             CC_bin         \n Min.   :1000   Min.   : 3.000   Length:1436        Length:1436       \n 1st Qu.:1040   1st Qu.: 3.000   Class :character   Class :character  \n Median :1070   Median : 3.000   Mode  :character   Mode  :character  \n Mean   :1072   Mean   : 3.815                                        \n 3rd Qu.:1085   3rd Qu.: 3.000                                        \n Max.   :1615   Max.   :36.000                                        \n     Doors           Gears         Cylinders  Fuel_Type        \n Min.   :2.000   Min.   :3.000   Min.   :4   Length:1436       \n 1st Qu.:3.000   1st Qu.:5.000   1st Qu.:4   Class :character  \n Median :4.000   Median :5.000   Median :4   Mode  :character  \n Mean   :4.033   Mean   :5.026   Mean   :4                     \n 3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:4                     \n Max.   :5.000   Max.   :6.000   Max.   :4                     \n    Color             Met_Color        Automatic       Mfr_Guarantee   \n Length:1436        Min.   :0.0000   Min.   :0.00000   Min.   :0.0000  \n Class :character   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000  \n Mode  :character   Median :1.0000   Median :0.00000   Median :0.0000  \n                    Mean   :0.6748   Mean   :0.05571   Mean   :0.4095  \n                    3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000  \n                    Max.   :1.0000   Max.   :1.00000   Max.   :1.0000  \n BOVAG_Guarantee       ABS            Airbag_1         Airbag_2     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.0000  \n Mean   :0.8955   Mean   :0.8134   Mean   :0.9708   Mean   :0.7228  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n     Airco        Automatic_airco   Boardcomputer      CD_Player     \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :0.00000   Median :0.0000   Median :0.0000  \n Mean   :0.5084   Mean   :0.05641   Mean   :0.2946   Mean   :0.2187  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.0000   Max.   :1.0000  \n  Central_Lock    Powered_Windows Power_Steering       Radio       \n Min.   :0.0000   Min.   :0.000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.000   Median :1.0000   Median :0.0000  \n Mean   :0.5801   Mean   :0.562   Mean   :0.9777   Mean   :0.1462  \n 3rd Qu.:1.0000   3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.000   Max.   :1.0000   Max.   :1.0000  \n   Mistlamps      Sport_Model     Backseat_Divider  Metallic_Rim   \n Min.   :0.000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.000   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :0.000   Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.257   Mean   :0.3001   Mean   :0.7702   Mean   :0.2047  \n 3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Radio_cassette      Tow_Bar      \n Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000  \n Mean   :0.1455   Mean   :0.2779  \n 3rd Qu.:0.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000  \n\n\n\nlist(car_resale)\n\n[[1]]\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\nData Overview\n\ncar_resale %&gt;% ExpData(type = 1)\n\n                                          Descriptions     Value\n1                                   Sample size (nrow)      1436\n2                              No. of variables (ncol)        38\n3                    No. of numeric/interger variables        33\n4                              No. of factor variables         0\n5                                No. of text variables         5\n6                             No. of logical variables         0\n7                          No. of identifier variables         1\n8                                No. of date variables         0\n9             No. of zero variance variables (uniform)         1\n10               %. of variables having complete cases 100% (38)\n11   %. of variables having &gt;0% and &lt;50% missing cases    0% (0)\n12 %. of variables having &gt;=50% and &lt;90% missing cases    0% (0)\n13          %. of variables having &gt;=90% missing cases    0% (0)\n\n\n\ncar_resale %&gt;% ExpData(type = 2)\n\n   Index    Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1               Id       numeric     1436             0              0\n2      2            Model     character     1436             0              0\n3      3            Price       numeric     1436             0              0\n4      4        Age_08_04       numeric     1436             0              0\n5      5        Mfg_Month       numeric     1436             0              0\n6      6         Mfg_Year       numeric     1436             0              0\n7      7               KM       numeric     1436             0              0\n8      8    Quarterly_Tax       numeric     1436             0              0\n9      9           Weight       numeric     1436             0              0\n10    10 Guarantee_Period       numeric     1436             0              0\n11    11           HP_Bin     character     1436             0              0\n12    12           CC_bin     character     1436             0              0\n13    13            Doors       numeric     1436             0              0\n14    14            Gears       numeric     1436             0              0\n15    15        Cylinders       numeric     1436             0              0\n16    16        Fuel_Type     character     1436             0              0\n17    17            Color     character     1436             0              0\n18    18        Met_Color       numeric     1436             0              0\n19    19        Automatic       numeric     1436             0              0\n20    20    Mfr_Guarantee       numeric     1436             0              0\n21    21  BOVAG_Guarantee       numeric     1436             0              0\n22    22              ABS       numeric     1436             0              0\n23    23         Airbag_1       numeric     1436             0              0\n24    24         Airbag_2       numeric     1436             0              0\n25    25            Airco       numeric     1436             0              0\n26    26  Automatic_airco       numeric     1436             0              0\n27    27    Boardcomputer       numeric     1436             0              0\n28    28        CD_Player       numeric     1436             0              0\n29    29     Central_Lock       numeric     1436             0              0\n30    30  Powered_Windows       numeric     1436             0              0\n31    31   Power_Steering       numeric     1436             0              0\n32    32            Radio       numeric     1436             0              0\n33    33        Mistlamps       numeric     1436             0              0\n34    34      Sport_Model       numeric     1436             0              0\n35    35 Backseat_Divider       numeric     1436             0              0\n36    36     Metallic_Rim       numeric     1436             0              0\n37    37   Radio_cassette       numeric     1436             0              0\n38    38          Tow_Bar       numeric     1436             0              0\n   No_of_distinct_values\n1                   1436\n2                    372\n3                    236\n4                     77\n5                     12\n6                      7\n7                   1263\n8                     13\n9                     59\n10                     9\n11                     3\n12                     3\n13                     4\n14                     4\n15                     1\n16                     3\n17                    10\n18                     2\n19                     2\n20                     2\n21                     2\n22                     2\n23                     2\n24                     2\n25                     2\n26                     2\n27                     2\n28                     2\n29                     2\n30                     2\n31                     2\n32                     2\n33                     2\n34                     2\n35                     2\n36                     2\n37                     2\n38                     2\n\n\n\ncols &lt;- c(\"Mfg_Month\" , \"HP_Bin\", \"CC_bin\", \"Doors\",  \"Gears\", \n\"Cylinders\", \"Fuel_Type\", \"Color\",\n          \"Met_Color\", \"Automatic\",\"Mfr_Guarantee\", \"BOVAG_Guarantee\",\n\"ABS\", \"Airbag_1\",\n      \"Airbag_2\", \"Airco\", \"Automatic_airco\", \"Boardcomputer\",\n\"CD_Player\",\n      \"Central_Lock\", \"Powered_Windows\",\"Power_Steering\", \"Radio\",\n\"Mistlamps\",\n      \"Sport_Model\", \"Backseat_Divider\", \"Metallic_Rim\",\n      \"Radio_cassette\", \"Tow_Bar\")\n\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla - Copy.xls\", sheet = \"data\") %&gt;% \n  mutate(Id = as.character(Id)) %&gt;%\n  mutate_each(funs(factor(.)),cols)\n\n\ncar_resale %&gt;%\n  ExpNumViz(target=NULL, nlim=10, Page=c(2,2))\n\n$`0`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncar_resale %&gt;% \n  ExpNumViz(target=\"Price\", nlim=10,Page=c(2,2))\n\n$`0`\n\n\n\n\n\n\n\n\n\nBar plots for all categorical variables\n\ncar_resale %&gt;% \n  ExpCatViz(target=NULL,\n            col=\"sky blue\",\n            clim=10,\n            margin=2,\n            Page=c(4,4),\n            sample=16)\n\n$`0`\n\n\n\n\n\n\n\n\n\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\nmodel1 &lt;-  lm(Price ~ Age_08_04 + KM + Weight + Guarantee_Period, data = car_resale)\ncheck_normality(model1)\n\nWarning: Non-normality of residuals detected (p &lt; .001).\n\n\n\ncheck_heteroscedasticity(model1)\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\n\nsummary(model1)\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10249.4   -768.6    -15.4    738.5   6356.5 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -2.186e+03  9.722e+02  -2.248   0.0247 *  \nAge_08_04        -1.195e+02  2.760e+00 -43.292   &lt;2e-16 ***\nKM               -2.406e-02  1.201e-03 -20.042   &lt;2e-16 ***\nWeight            1.972e+01  8.379e-01  23.533   &lt;2e-16 ***\nGuarantee_Period  2.682e+01  1.261e+01   2.126   0.0336 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1413 on 1431 degrees of freedom\nMultiple R-squared:  0.8486,    Adjusted R-squared:  0.8482 \nF-statistic:  2005 on 4 and 1431 DF,  p-value: &lt; 2.2e-16\n\n\n\ncheck_model(model)\n\n\n\n\n\n\n\n\n\ntbl_regression(model1, intercept=TRUE)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\n(Intercept)\n-2,186\n-4,093, -278\n0.025\n\n\nAge_08_04\n-119\n-125, -114\n&lt;0.001\n\n\nKM\n-0.02\n-0.03, -0.02\n&lt;0.001\n\n\nWeight\n20\n18, 21\n&lt;0.001\n\n\nGuarantee_Period\n27\n2.1, 52\n0.034\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n\ntbl_regression(model1, intercept=TRUE) %&gt;%\n  add_glance_source_note(\n    label=list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared,adj.r.squared,\n                AIC,statistic,\n                p.value,sigma))\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n-2,186\n-4,093, -278\n0.025\n    Age_08_04\n-119\n-125, -114\n&lt;0.001\n    KM\n-0.02\n-0.03, -0.02\n&lt;0.001\n    Weight\n20\n18, 21\n&lt;0.001\n    Guarantee_Period\n27\n2.1, 52\n0.034\n  \n  \n    \n      R² = 0.849; Adjusted R² = 0.848; AIC = 24,915; Statistic = 2,005; p-value = &lt;0.001; σ = 1,413\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\np_model1 &lt;- parameters(model1)\n\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\nggcoefstats(model1, output = \"plot\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In_Class_Ex05.html",
    "href": "In-Class_Ex/In-Class_Ex05/In_Class_Ex05.html",
    "title": "In-Class_Exercise 5",
    "section": "",
    "text": "In-Class Exercise 5 - Visual Analytics\nGetting started\n\npacman::p_load(tidyverse, readxl, SmartEDA, easystats, gtsummary, ggstatsplot)\n\nImporting Data\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla - Copy.xls\",\"data\")\n\n\nsummary(car_resale)\n\n       Id            Model               Price         Age_08_04    \n Min.   :   1.0   Length:1436        Min.   : 4350   Min.   : 1.00  \n 1st Qu.: 361.8   Class :character   1st Qu.: 8450   1st Qu.:44.00  \n Median : 721.5   Mode  :character   Median : 9900   Median :61.00  \n Mean   : 721.6                      Mean   :10731   Mean   :55.95  \n 3rd Qu.:1081.2                      3rd Qu.:11950   3rd Qu.:70.00  \n Max.   :1442.0                      Max.   :32500   Max.   :80.00  \n   Mfg_Month         Mfg_Year          KM         Quarterly_Tax   \n Min.   : 1.000   Min.   :1998   Min.   :     1   Min.   : 19.00  \n 1st Qu.: 3.000   1st Qu.:1998   1st Qu.: 43000   1st Qu.: 69.00  \n Median : 5.000   Median :1999   Median : 63390   Median : 85.00  \n Mean   : 5.549   Mean   :2000   Mean   : 68533   Mean   : 87.12  \n 3rd Qu.: 8.000   3rd Qu.:2001   3rd Qu.: 87021   3rd Qu.: 85.00  \n Max.   :12.000   Max.   :2004   Max.   :243000   Max.   :283.00  \n     Weight     Guarantee_Period    HP_Bin             CC_bin         \n Min.   :1000   Min.   : 3.000   Length:1436        Length:1436       \n 1st Qu.:1040   1st Qu.: 3.000   Class :character   Class :character  \n Median :1070   Median : 3.000   Mode  :character   Mode  :character  \n Mean   :1072   Mean   : 3.815                                        \n 3rd Qu.:1085   3rd Qu.: 3.000                                        \n Max.   :1615   Max.   :36.000                                        \n     Doors           Gears         Cylinders  Fuel_Type        \n Min.   :2.000   Min.   :3.000   Min.   :4   Length:1436       \n 1st Qu.:3.000   1st Qu.:5.000   1st Qu.:4   Class :character  \n Median :4.000   Median :5.000   Median :4   Mode  :character  \n Mean   :4.033   Mean   :5.026   Mean   :4                     \n 3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:4                     \n Max.   :5.000   Max.   :6.000   Max.   :4                     \n    Color             Met_Color        Automatic       Mfr_Guarantee   \n Length:1436        Min.   :0.0000   Min.   :0.00000   Min.   :0.0000  \n Class :character   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000  \n Mode  :character   Median :1.0000   Median :0.00000   Median :0.0000  \n                    Mean   :0.6748   Mean   :0.05571   Mean   :0.4095  \n                    3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000  \n                    Max.   :1.0000   Max.   :1.00000   Max.   :1.0000  \n BOVAG_Guarantee       ABS            Airbag_1         Airbag_2     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.0000  \n Mean   :0.8955   Mean   :0.8134   Mean   :0.9708   Mean   :0.7228  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n     Airco        Automatic_airco   Boardcomputer      CD_Player     \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :0.00000   Median :0.0000   Median :0.0000  \n Mean   :0.5084   Mean   :0.05641   Mean   :0.2946   Mean   :0.2187  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.0000   Max.   :1.0000  \n  Central_Lock    Powered_Windows Power_Steering       Radio       \n Min.   :0.0000   Min.   :0.000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.000   Median :1.0000   Median :0.0000  \n Mean   :0.5801   Mean   :0.562   Mean   :0.9777   Mean   :0.1462  \n 3rd Qu.:1.0000   3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.000   Max.   :1.0000   Max.   :1.0000  \n   Mistlamps      Sport_Model     Backseat_Divider  Metallic_Rim   \n Min.   :0.000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.000   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :0.000   Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.257   Mean   :0.3001   Mean   :0.7702   Mean   :0.2047  \n 3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Radio_cassette      Tow_Bar      \n Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000  \n Mean   :0.1455   Mean   :0.2779  \n 3rd Qu.:0.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000  \n\n\n\nlist(car_resale)\n\n[[1]]\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\nData Overview\n\ncar_resale %&gt;% ExpData(type = 1)\n\n                                          Descriptions     Value\n1                                   Sample size (nrow)      1436\n2                              No. of variables (ncol)        38\n3                    No. of numeric/interger variables        33\n4                              No. of factor variables         0\n5                                No. of text variables         5\n6                             No. of logical variables         0\n7                          No. of identifier variables         1\n8                                No. of date variables         0\n9             No. of zero variance variables (uniform)         1\n10               %. of variables having complete cases 100% (38)\n11   %. of variables having &gt;0% and &lt;50% missing cases    0% (0)\n12 %. of variables having &gt;=50% and &lt;90% missing cases    0% (0)\n13          %. of variables having &gt;=90% missing cases    0% (0)\n\n\n\ncar_resale %&gt;% ExpData(type = 2)\n\n   Index    Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1               Id       numeric     1436             0              0\n2      2            Model     character     1436             0              0\n3      3            Price       numeric     1436             0              0\n4      4        Age_08_04       numeric     1436             0              0\n5      5        Mfg_Month       numeric     1436             0              0\n6      6         Mfg_Year       numeric     1436             0              0\n7      7               KM       numeric     1436             0              0\n8      8    Quarterly_Tax       numeric     1436             0              0\n9      9           Weight       numeric     1436             0              0\n10    10 Guarantee_Period       numeric     1436             0              0\n11    11           HP_Bin     character     1436             0              0\n12    12           CC_bin     character     1436             0              0\n13    13            Doors       numeric     1436             0              0\n14    14            Gears       numeric     1436             0              0\n15    15        Cylinders       numeric     1436             0              0\n16    16        Fuel_Type     character     1436             0              0\n17    17            Color     character     1436             0              0\n18    18        Met_Color       numeric     1436             0              0\n19    19        Automatic       numeric     1436             0              0\n20    20    Mfr_Guarantee       numeric     1436             0              0\n21    21  BOVAG_Guarantee       numeric     1436             0              0\n22    22              ABS       numeric     1436             0              0\n23    23         Airbag_1       numeric     1436             0              0\n24    24         Airbag_2       numeric     1436             0              0\n25    25            Airco       numeric     1436             0              0\n26    26  Automatic_airco       numeric     1436             0              0\n27    27    Boardcomputer       numeric     1436             0              0\n28    28        CD_Player       numeric     1436             0              0\n29    29     Central_Lock       numeric     1436             0              0\n30    30  Powered_Windows       numeric     1436             0              0\n31    31   Power_Steering       numeric     1436             0              0\n32    32            Radio       numeric     1436             0              0\n33    33        Mistlamps       numeric     1436             0              0\n34    34      Sport_Model       numeric     1436             0              0\n35    35 Backseat_Divider       numeric     1436             0              0\n36    36     Metallic_Rim       numeric     1436             0              0\n37    37   Radio_cassette       numeric     1436             0              0\n38    38          Tow_Bar       numeric     1436             0              0\n   No_of_distinct_values\n1                   1436\n2                    372\n3                    236\n4                     77\n5                     12\n6                      7\n7                   1263\n8                     13\n9                     59\n10                     9\n11                     3\n12                     3\n13                     4\n14                     4\n15                     1\n16                     3\n17                    10\n18                     2\n19                     2\n20                     2\n21                     2\n22                     2\n23                     2\n24                     2\n25                     2\n26                     2\n27                     2\n28                     2\n29                     2\n30                     2\n31                     2\n32                     2\n33                     2\n34                     2\n35                     2\n36                     2\n37                     2\n38                     2\n\n\n\ncols &lt;- c(\"Mfg_Month\" , \"HP_Bin\", \"CC_bin\", \"Doors\",  \"Gears\", \n\"Cylinders\", \"Fuel_Type\", \"Color\",\n          \"Met_Color\", \"Automatic\",\"Mfr_Guarantee\", \"BOVAG_Guarantee\",\n\"ABS\", \"Airbag_1\",\n      \"Airbag_2\", \"Airco\", \"Automatic_airco\", \"Boardcomputer\",\n\"CD_Player\",\n      \"Central_Lock\", \"Powered_Windows\",\"Power_Steering\", \"Radio\",\n\"Mistlamps\",\n      \"Sport_Model\", \"Backseat_Divider\", \"Metallic_Rim\",\n      \"Radio_cassette\", \"Tow_Bar\")\n\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla - Copy.xls\", sheet = \"data\") %&gt;% \n  mutate(Id = as.character(Id)) %&gt;%\n  mutate_each(funs(factor(.)),cols)\n\n\ncar_resale %&gt;%\n  ExpNumViz(target=NULL, nlim=10, Page=c(2,2))\n\n$`0`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncar_resale %&gt;% \n  ExpNumViz(target=\"Price\", nlim=10,Page=c(2,2))\n\n$`0`\n\n\n\n\n\n\n\n\n\nBar plots for all categorical variables\n\ncar_resale %&gt;% \n  ExpCatViz(target=NULL,\n            col=\"sky blue\",\n            clim=10,\n            margin=2,\n            Page=c(4,4),\n            sample=16)\n\n$`0`\n\n\n\n\n\n\n\n\n\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\nmodel1 &lt;-  lm(Price ~ Age_08_04 + KM + Weight + Guarantee_Period, data = car_resale)\ncheck_normality(model1)\n\nWarning: Non-normality of residuals detected (p &lt; .001).\n\n\n\ncheck_heteroscedasticity(model1)\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\n\nsummary(model1)\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10249.4   -768.6    -15.4    738.5   6356.5 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -2.186e+03  9.722e+02  -2.248   0.0247 *  \nAge_08_04        -1.195e+02  2.760e+00 -43.292   &lt;2e-16 ***\nKM               -2.406e-02  1.201e-03 -20.042   &lt;2e-16 ***\nWeight            1.972e+01  8.379e-01  23.533   &lt;2e-16 ***\nGuarantee_Period  2.682e+01  1.261e+01   2.126   0.0336 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1413 on 1431 degrees of freedom\nMultiple R-squared:  0.8486,    Adjusted R-squared:  0.8482 \nF-statistic:  2005 on 4 and 1431 DF,  p-value: &lt; 2.2e-16\n\n\n\ncheck_model(model)\n\n\n\n\n\n\n\n\n\ntbl_regression(model1, intercept=TRUE)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\n(Intercept)\n-2,186\n-4,093, -278\n0.025\n\n\nAge_08_04\n-119\n-125, -114\n&lt;0.001\n\n\nKM\n-0.02\n-0.03, -0.02\n&lt;0.001\n\n\nWeight\n20\n18, 21\n&lt;0.001\n\n\nGuarantee_Period\n27\n2.1, 52\n0.034\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n\ntbl_regression(model1, intercept=TRUE) %&gt;%\n  add_glance_source_note(\n    label=list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared,adj.r.squared,\n                AIC,statistic,\n                p.value,sigma))\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n-2,186\n-4,093, -278\n0.025\n    Age_08_04\n-119\n-125, -114\n&lt;0.001\n    KM\n-0.02\n-0.03, -0.02\n&lt;0.001\n    Weight\n20\n18, 21\n&lt;0.001\n    Guarantee_Period\n27\n2.1, 52\n0.034\n  \n  \n    \n      R² = 0.849; Adjusted R² = 0.848; AIC = 24,915; Statistic = 2,005; p-value = &lt;0.001; σ = 1,413\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\np_model1 &lt;- parameters(model1)\n\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\nggcoefstats(model1, output = \"plot\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01.html",
    "href": "Take-Home_Ex/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Ship Performance Analysis"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01.html#load-data",
    "href": "Take-Home_Ex/Take-home_Ex01.html#load-data",
    "title": "Take-home Exercise 1",
    "section": "Load Data",
    "text": "Load Data\n\n# Read the ship performance dataset\ndata &lt;- read_csv(\"Take-home_Ex01/data/Ship_Performance_Dataset.csv\")\n\n# Display structure of the dataset\nstr(data)\n\nspc_tbl_ [2,736 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Date                   : Date[1:2736], format: \"2023-06-04\" \"2023-06-11\" ...\n $ Ship_Type              : chr [1:2736] \"Container Ship\" \"Fish Carrier\" \"Container Ship\" \"Bulk Carrier\" ...\n $ Route_Type             : chr [1:2736] \"None\" \"Short-haul\" \"Long-haul\" \"Transoceanic\" ...\n $ Engine_Type            : chr [1:2736] \"Heavy Fuel Oil (HFO)\" \"Steam Turbine\" \"Diesel\" \"Steam Turbine\" ...\n $ Maintenance_Status     : chr [1:2736] \"Critical\" \"Good\" \"Fair\" \"Fair\" ...\n $ Speed_Over_Ground_knots: num [1:2736] 12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW        : num [1:2736] 2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm   : num [1:2736] 1031 1060 659 1127 1445 ...\n $ Draft_meters           : num [1:2736] 14.13 14.65 7.2 11.79 9.73 ...\n $ Weather_Condition      : chr [1:2736] \"Moderate\" \"Rough\" \"Moderate\" \"Moderate\" ...\n $ Cargo_Weight_tons      : num [1:2736] 1959 162 178 1737 261 ...\n $ Operational_Cost_USD   : num [1:2736] 483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD : num [1:2736] 292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours  : num [1:2736] 25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh  : num [1:2736] 1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score  : num [1:2736] 1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count    : num [1:2736] 1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage: num [1:2736] 93.8 93.9 96.2 66.2 80 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Date = col_date(format = \"\"),\n  ..   Ship_Type = col_character(),\n  ..   Route_Type = col_character(),\n  ..   Engine_Type = col_character(),\n  ..   Maintenance_Status = col_character(),\n  ..   Speed_Over_Ground_knots = col_double(),\n  ..   Engine_Power_kW = col_double(),\n  ..   Distance_Traveled_nm = col_double(),\n  ..   Draft_meters = col_double(),\n  ..   Weather_Condition = col_character(),\n  ..   Cargo_Weight_tons = col_double(),\n  ..   Operational_Cost_USD = col_double(),\n  ..   Revenue_per_Voyage_USD = col_double(),\n  ..   Turnaround_Time_hours = col_double(),\n  ..   Efficiency_nm_per_kWh = col_double(),\n  ..   Seasonal_Impact_Score = col_double(),\n  ..   Weekly_Voyage_Count = col_double(),\n  ..   Average_Load_Percentage = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01.html#data-cleaning",
    "href": "Take-Home_Ex/Take-home_Ex01.html#data-cleaning",
    "title": "Take-home Exercise 1",
    "section": "Data Cleaning",
    "text": "Data Cleaning\n\n# Check for missing values\ncolSums(is.na(data))\n\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n\n# Remove rows with missing critical values (assuming speed, fuel, efficiency are key factors)\n#data &lt;- data %&gt;% drop_na(speed, fuel_consumption, efficiency)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01.html#exploratory-data-analysis",
    "href": "Take-Home_Ex/Take-home_Ex01.html#exploratory-data-analysis",
    "title": "Take-home Exercise 1",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\n# Summary statistics for key metrics\nsummary(data[, c(\"Speed_Over_Ground_knots\", \"Efficiency_nm_per_kWh\", \"Engine_Power_kW\")])\n\n Speed_Over_Ground_knots Efficiency_nm_per_kWh Engine_Power_kW\n Min.   :10.01           Min.   :0.1002        Min.   : 501   \n 1st Qu.:13.93           1st Qu.:0.4636        1st Qu.:1148   \n Median :17.71           Median :0.7899        Median :1757   \n Mean   :17.60           Mean   :0.7987        Mean   :1758   \n 3rd Qu.:21.28           3rd Qu.:1.1474        3rd Qu.:2383   \n Max.   :25.00           Max.   :1.4993        Max.   :2999"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01.html#distribution-of-ship-speeds",
    "href": "Take-Home_Ex/Take-home_Ex01.html#distribution-of-ship-speeds",
    "title": "Take-home Exercise 1",
    "section": "Distribution of Ship Speeds",
    "text": "Distribution of Ship Speeds\n\nggplot(data, aes(x = Speed_Over_Ground_knots)) +\n  geom_histogram(fill = \"#69b3a2\", color = \"black\", bins = 20, alpha = 0.7) +\n  labs(title = \"Distribution of Ship Speeds\",\n       x = \"Speed (knots)\",\n       y = \"Count\") +\n  theme_custom"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01.html#fuel-consumption-vs-speed",
    "href": "Take-Home_Ex/Take-home_Ex01.html#fuel-consumption-vs-speed",
    "title": "Take-home Exercise 1",
    "section": "Fuel Consumption vs Speed",
    "text": "Fuel Consumption vs Speed\n\nggplot(data, aes(x = Speed_Over_Ground_knots, y = Engine_Power_kW)) +\n  geom_point(alpha = 0.5, color = \"#0073C2\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"Engine Power vs. Speed\",\n       x = \"Speed (knots)\",\n       y = \"Engine Power (kW)\") +\n  theme_custom"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01.html#efficiency-analysis",
    "href": "Take-Home_Ex/Take-home_Ex01.html#efficiency-analysis",
    "title": "Take-home Exercise 1",
    "section": "Efficiency Analysis",
    "text": "Efficiency Analysis\n\nggplot(data, aes(x = factor(0), y = Efficiency_nm_per_kWh)) +\n  geom_boxplot(fill = \"#ffcc00\", alpha = 0.7) +\n  labs(title = \"Ship Efficiency Boxplot\",\n       x = \"\",\n       y = \"Efficiency (nm/kWh)\") +\n  theme_custom"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01.html#conclusion",
    "href": "Take-Home_Ex/Take-home_Ex01.html#conclusion",
    "title": "Take-home Exercise 1",
    "section": "Conclusion",
    "text": "Conclusion\n\n\n\n### Key Findings\n\n\n1. Most ships operate within a speed range of 10-25 knots, with minor variations.\n\n\n2. Engine power increases with speed, but the relationship is not perfectly linear.\n\n\n3. Efficiency (nautical miles per kWh) varies significantly among ships, indicating potential for optimization."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Ship performance is an essential factor in maritime operations, influencing fuel efficiency, speed, and cargo transport efficiency. This study aims to analyze ship performance data, cluster ships based on operational characteristics, and identify key patterns affecting ship efficiency.\nMaritime transport is the backbone of global trade, playing a crucial role in economic growth and sustainability. Efficient ship operations, fuel optimization, and cost management are key concerns for industry stakeholders. By analyzing ship performance data, we can uncover trends, improve decision-making, and explore solutions to reduce environmental impact.\n\n\n\nThe data set for this exercise is Ship Performance Clustering retrieved from Kaggle which contains attributes, including:\nNumerical Features:\n\nSpeed_Over_Ground_knots: Average speed of the ship over water (in knots).\nEngine_Power_kW: Engine power output (in kilowatts).\nDistance_Traveled_nm: Total distance traveled by the ship (in nautical miles).\nOperational_Cost_USD: Total operational cost per voyage (in USD).\nRevenue_per_Voyage_USD: Revenue generated per voyage (in USD).\nEfficiency_nm_per_kWh: Energy efficiency calculated in nautical miles per kilowatt-hour.\n\nCategorical Features:\n\nShip_Type: Type of ship (e.g., Tanker, Container Ship, Fish Carrier, Bulk Carrier).\nRoute_Type: Shipping route type (e.g., Short-haul, Long-haul, Transoceanic).\nEngine_Type: Type of engine (e.g., Diesel, Heavy Fuel Oil).\nMaintenance_Status: Maintenance condition of the ship (e.g., Fair, Critical, Good).\nWeather_Condition: Prevailing weather conditions during voyages (e.g., Calm, Moderate, Rough).\n\n\n\nCode\ndata_path &lt;- \"data/Ship_Performance_Dataset.csv\" \ndf &lt;- read.csv(data_path, stringsAsFactors = FALSE)\n\n\n\n\n\nThe objective of this analysis is to pre-process the data set, conduct Exploratory Data Analysis (EDA) and perform clustering to identify groups of ships with similar performance."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-data",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-data",
    "title": "Take-home Exercise 1",
    "section": "2️⃣ Load Data",
    "text": "2️⃣ Load Data\n\n# Read the ship performance dataset\ndata &lt;- read_csv(\"data/Ship_Performance_Dataset.csv\")\n\n# Display structure of the dataset\nstr(data)\n\nspc_tbl_ [2,736 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Date                   : Date[1:2736], format: \"2023-06-04\" \"2023-06-11\" ...\n $ Ship_Type              : chr [1:2736] \"Container Ship\" \"Fish Carrier\" \"Container Ship\" \"Bulk Carrier\" ...\n $ Route_Type             : chr [1:2736] \"None\" \"Short-haul\" \"Long-haul\" \"Transoceanic\" ...\n $ Engine_Type            : chr [1:2736] \"Heavy Fuel Oil (HFO)\" \"Steam Turbine\" \"Diesel\" \"Steam Turbine\" ...\n $ Maintenance_Status     : chr [1:2736] \"Critical\" \"Good\" \"Fair\" \"Fair\" ...\n $ Speed_Over_Ground_knots: num [1:2736] 12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW        : num [1:2736] 2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm   : num [1:2736] 1031 1060 659 1127 1445 ...\n $ Draft_meters           : num [1:2736] 14.13 14.65 7.2 11.79 9.73 ...\n $ Weather_Condition      : chr [1:2736] \"Moderate\" \"Rough\" \"Moderate\" \"Moderate\" ...\n $ Cargo_Weight_tons      : num [1:2736] 1959 162 178 1737 261 ...\n $ Operational_Cost_USD   : num [1:2736] 483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD : num [1:2736] 292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours  : num [1:2736] 25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh  : num [1:2736] 1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score  : num [1:2736] 1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count    : num [1:2736] 1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage: num [1:2736] 93.8 93.9 96.2 66.2 80 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Date = col_date(format = \"\"),\n  ..   Ship_Type = col_character(),\n  ..   Route_Type = col_character(),\n  ..   Engine_Type = col_character(),\n  ..   Maintenance_Status = col_character(),\n  ..   Speed_Over_Ground_knots = col_double(),\n  ..   Engine_Power_kW = col_double(),\n  ..   Distance_Traveled_nm = col_double(),\n  ..   Draft_meters = col_double(),\n  ..   Weather_Condition = col_character(),\n  ..   Cargo_Weight_tons = col_double(),\n  ..   Operational_Cost_USD = col_double(),\n  ..   Revenue_per_Voyage_USD = col_double(),\n  ..   Turnaround_Time_hours = col_double(),\n  ..   Efficiency_nm_per_kWh = col_double(),\n  ..   Seasonal_Impact_Score = col_double(),\n  ..   Weekly_Voyage_Count = col_double(),\n  ..   Average_Load_Percentage = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-cleaning",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-cleaning",
    "title": "Take-home Exercise 1",
    "section": "Data Cleaning",
    "text": "Data Cleaning\n\n# Check for missing values \ncolSums(is.na(data)) \n\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n\n# Remove rows with missing critical values (assuming speed, fuel, efficiency are key factors)\n#data &lt;- data %&gt;% drop_na(speed, fuel_consumption, efficiency)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-analysis",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-analysis",
    "title": "Take-home Exercise 1",
    "section": "6. Exploratory Data Analysis",
    "text": "6. Exploratory Data Analysis\n\n6.1 Distribution of Key Numerical Variables Across Ship Types\n\n\nCode\n# Load libraries\nlibrary(ggplot2)\nlibrary(ggridges)\nlibrary(viridis)\nlibrary(patchwork)\nlibrary(dplyr)\n\n# Convert ship performance data into long format\ndf_long &lt;- df %&gt;%\n  select(Ship_Type, Speed_Over_Ground_knots, Efficiency_nm_per_kWh, \n         Operational_Cost_USD, Distance_Traveled_nm) %&gt;%\n  pivot_longer(cols = -Ship_Type, names_to = \"Metric\", values_to = \"Value\")\n\n# Create Ridge Plot with Y-axis starting from 0\nridgeplot_performance &lt;- ggplot(df_long, aes(x = Value, y = Ship_Type, \n                                             fill = 0.5 - abs(0.5 - stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", calc_ecdf = TRUE, scale = 1.2, rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Tail probability\", direction = -1) +\n  labs(title = \"                         Ship Performance: Speed, Efficiency, Cost, and Distance\", hjust = 0.5,\n       subtitle = \"Density plots of key performance metrics stratified by Ship Type\",\n       x = \"Performance Metrics\") +\n  facet_wrap(~Metric, scales = \"free_x\") +  # Facet by performance variable\n  scale_y_discrete(expand = c(0, 0)) +  # Ensures y-axis starts at 0\n  theme_minimal() +\n  theme(legend.position = \"none\", \n        plot.title = element_text(face = \"bold\", size = 20),\n        plot.subtitle = element_text(size = 18),\n        axis.text.x = element_text(size = 12),\n        axis.text.y = element_text(size = 14),\n        axis.title.y = element_blank(),\n        axis.title.x = element_text(size = 14, face = \"bold\"))\n\n# Display the final plot\nridgeplot_performance\n\n\n\n\n\n\n\n\n\nInsights:\n\nContainer Ships & Bulk Carriers are faster, more efficient, and travel longer distances, but incur higher operational costs.\nFish Carriers & Tankers tend to operate at lower speeds, over shorter routes, and with more stable costs.\nThe ridge plot highlights clear operational differences in efficiency and cost structure across ship types.\n\n\n\n6.2 Relationship Between Engine Type and Fuel Efficiency\n\n\nCode\n# Load libraries\nlibrary(ggplot2)\nlibrary(RColorBrewer)\n\n# Define pastel colors\npastel_colors &lt;- brewer.pal(n = 5, name = \"Pastel1\")  # Adjust for number of engine types\n\n# Boxplot with detailed statistics\nggplot(df, aes(x = Engine_Type, y = Efficiency_nm_per_kWh, fill = Engine_Type)) +\n  geom_boxplot(alpha = 0.8, outlier.color = \"red\", outlier.shape = 16, outlier.size = 3) +  # Outliers in red\n  stat_summary(fun = mean, geom = \"point\", shape = 23, size = 4, fill = \"black\", color = \"white\") +  # Mean as white point\n  scale_fill_manual(values = pastel_colors) +  # Use pastel colors\n  labs(title = \"Engine Type vs Fuel Efficiency\",\n       subtitle = \"Boxplot with Mean, Outliers, and Quartiles\",\n       x = \"Engine Type\", y = \"Efficiency (nm per kWh)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(face = \"bold\", size = 16),\n        plot.subtitle = element_text(size = 14),\n        axis.text.x = element_text(size = 12, angle = 30, hjust = 1),  # Rotate x labels for better readability\n        axis.text.y = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nInsights:\n\nDiesel and HFO engines are generally more efficient and consistent.\nSteam Turbines have a highly variable efficiency range, making them less predictable.\nOutliers in efficiency suggest some ships are operating under unique conditions (e.g., heavier loads, different fuel quality, or aging machinery).\n\n\n\n6.3 Violin Plot: Route Type vs Distance Traveled (nm)\n\n\nCode\nggplot(df, aes(x = Route_Type, y = Distance_Traveled_nm, fill = Route_Type)) +\n  geom_violin(alpha = 0.6) +\n  geom_boxplot(width = 0.1, outlier.shape = NA, alpha = 0.5) +  # Add boxplot inside violin for clarity\n  scale_fill_manual(values = pastel_colors) +\n  labs(title = \"Distribution of Distance Traveled by Route Type\",\n       subtitle = \"Violin plot showing spread of voyage distances\",\n       x = \"Route Type\", y = \"Distance Traveled (nm)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(face = \"bold\", size = 16),\n        plot.subtitle = element_text(size = 14),\n        axis.text.x = element_text(size = 12, angle = 30, hjust = 1),\n        axis.text.y = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nInsights:\nTransoceanic routes handle the longest and most variable voyages, likely for global shipping networks.\nLong-haul voyages are long but more standardized than transoceanic trips.\nShort-haul & coastal routes are shorter and more predictable, indicating regional transport usage."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-ship-speeds",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-ship-speeds",
    "title": "Take-home Exercise 1",
    "section": "5️⃣ Distribution of Ship Speeds",
    "text": "5️⃣ Distribution of Ship Speeds\n\nggplot(data, aes(x = Speed_Over_Ground_knots)) +\n  geom_histogram(fill = \"#69b3a2\", color = \"black\", bins = 20, alpha = 0.7) +\n  labs(title = \"Distribution of Ship Speeds\",\n       x = \"Speed (knots)\",\n       y = \"Count\") +\n  theme_custom"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#fuel-consumption-vs-speed",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#fuel-consumption-vs-speed",
    "title": "Take-home Exercise 1",
    "section": "Fuel Consumption vs Speed",
    "text": "Fuel Consumption vs Speed\n\nggplot(data, aes(x = Speed_Over_Ground_knots, y = Engine_Power_kW)) +   geom_point(alpha = 0.5, color = \"#0073C2\") +   geom_smooth(method = \"lm\", se = FALSE, color = \"red\", linetype = \"dashed\") +   labs(title = \"Engine Power vs. Speed\",        x = \"Speed (knots)\",        y = \"Engine Power (kW)\") +   theme_custom"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#efficiency-analysis",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#efficiency-analysis",
    "title": "Take-home Exercise 1",
    "section": "7️⃣ Efficiency Analysis",
    "text": "7️⃣ Efficiency Analysis\n\nggplot(data, aes(x = Ship_Type, y = Efficiency_nm_per_kWh, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.7) +\n  labs(title = \"Ship Efficiency Across Different Ship Types\",\n       x = \"Ship Type\",\n       y = \"Efficiency (nm/kWh)\") +\n  theme_custom +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "title": "Take-home Exercise 1",
    "section": "9️⃣ Conclusion",
    "text": "9️⃣ Conclusion\n\n\n\n### Key Findings\n\n\n1. Most ships operate within a speed range of 10-25 knots, with minor variations.\n\n\n2. Engine power increases with speed, but the relationship is not perfectly linear.\n\n\n3. Efficiency (nautical miles per kWh) varies significantly among ship types, indicating potential for optimization.\n\n\n4. Different ship types exhibit unique efficiency distributions, suggesting that targeted improvements could enhance performance."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#introduction",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#introduction",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "### Objective of the Analysis\n\n\nThis report analyzes the performance of various ship types based on key operational metrics such as speed, fuel efficiency, and engine power. The goal is to identify trends and insights that can help improve operational efficiency and cost savings."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-cleaning-preparation",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-cleaning-preparation",
    "title": "Take-home Exercise 1",
    "section": "3️⃣ Data Cleaning & Preparation",
    "text": "3️⃣ Data Cleaning & Preparation\n\n# Check for missing values\ncolSums(is.na(data))\n\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n\n# Remove rows with missing critical values\n#data &lt;- data %&gt;% drop_na(Speed_Over_Ground_knots, Engine_Power_kW, Efficiency_nm_per_kWh)\n\n# Convert categorical variables to factors\ndata$Ship_Type &lt;- as.factor(data$Ship_Type)\ndata$Engine_Type &lt;- as.factor(data$Engine_Type)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#univariate-analysis",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#univariate-analysis",
    "title": "Take-home Exercise 1",
    "section": "5. Univariate Analysis",
    "text": "5. Univariate Analysis\n\n\nCode\nsummary(df_selected)\n\n\n Speed_Over_Ground_knots Engine_Power_kW Cargo_Weight_tons\n Min.   :10.01           Min.   : 501    Min.   :  50.23  \n 1st Qu.:13.93           1st Qu.:1148    1st Qu.: 553.98  \n Median :17.71           Median :1757    Median :1043.21  \n Mean   :17.60           Mean   :1758    Mean   :1032.57  \n 3rd Qu.:21.28           3rd Qu.:2383    3rd Qu.:1527.72  \n Max.   :25.00           Max.   :2999    Max.   :1999.13  \n Efficiency_nm_per_kWh Operational_Cost_USD Distance_Traveled_nm\n Min.   :0.1002        Min.   : 10092       Min.   :  50.43     \n 1st Qu.:0.4636        1st Qu.:131293       1st Qu.: 548.51     \n Median :0.7899        Median :257158       Median :1037.82     \n Mean   :0.7987        Mean   :255143       Mean   :1036.41     \n 3rd Qu.:1.1474        3rd Qu.:381797       3rd Qu.:1540.93     \n Max.   :1.4993        Max.   :499735       Max.   :1998.34     \n\n\nCode\nsummary(df_selected$Fuel_Consumption)\n\n\nLength  Class   Mode \n     0   NULL   NULL \n\n\n\n5.1 Speed Distribution\n\n\nCode\n# Select numerical and categorical variables\nnumerical_vars &lt;- c(\"Speed_Over_Ground_knots\", \"Engine_Power_kW\", \"Cargo_Weight_tons\", \n                    \"Efficiency_nm_per_kWh\", \"Operational_Cost_USD\", \"Distance_Traveled_nm\")\n\ncategorical_vars &lt;- c(\"Ship_Type\", \"Route_Type\", \"Engine_Type\", \"Maintenance_Status\", \"Weather_Condition\")\n\n\n\n\nCode\n# Load libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Convert numerical variables into long format\ndf_long &lt;- df %&gt;%\n  select(Speed_Over_Ground_knots, Engine_Power_kW, Cargo_Weight_tons, \n         Efficiency_nm_per_kWh, Operational_Cost_USD, Distance_Traveled_nm) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"Variable\", values_to = \"Value\")\n\n# Apply log transformation where necessary to handle large scale differences\ndf_long &lt;- df_long %&gt;%\n  mutate(Value = ifelse(Variable %in% c(\"Operational_Cost_USD\", \"Efficiency_nm_per_kWh\"),\n                        log10(Value + 1), Value))  # log10 transformation to prevent log(0)\n\n# Create a 3x3 grid layout for histograms\nggplot(df_long, aes(x = Value)) +\n  geom_histogram(aes(y = ..count..), fill = \"pink\", color = \"black\", alpha = 0.7, bins = 30) +\n  geom_density(aes(y = ..density.. * max(..count..)), color = \"red\", size = 1) +  # Scale KDE curve properly\n  facet_wrap(~Variable, scales = \"free\", ncol = 3, nrow = 3) +  # 3x3 layout\n  labs(title = \"Distribution of Numerical Variables\", x = \"Values\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nInsights:\n1️⃣ Engine Power (kW) & Cargo Weight (tons) show uniform distributions, suggesting varied ship types with no dominant power range.\n2️⃣ Operational Cost (USD) & Efficiency (nm per kWh) required log transformation due to high variance and extreme values.\n3️⃣ Speed Over Ground (knots) has a bimodal distribution, indicating two distinct speed categories among ships.\n4️⃣ Distance Traveled (nm) appears evenly spread, suggesting diverse voyage lengths rather than a common range.\n\n\n5.2 Fuel Consumption\n\n\nCode\n#| fig-width: 12\n#| fig-height: 10\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)  # For pivot_longer\n\n# Convert categorical variables into long format\ndf_long &lt;- df %&gt;%\n  select(Ship_Type, Route_Type, Engine_Type, Maintenance_Status, Weather_Condition) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"Category\", values_to = \"Value\")\n\n# Create horizontal bar charts\nggplot(df_long, aes(y = Value, fill = Category)) +\n  geom_bar(color = \"black\", fill = \"lightblue\") +  # Light blue bars with black outline\n  facet_wrap(~Category, scales = \"free_y\") +  # Facet by category\n  labs(title = \"Categorical Variable Distributions\", x = \"Count\", y = \"Categories\") +\n  theme_minimal() + \n  theme(axis.text.y = element_text(size = 10))  # Adjust label size for readability\n\n\n\n\n\n\n\n\n\nInsights:\n1️⃣ Diesel and Heavy Fuel Oil (HFO) are the dominant engine types, while Steam Turbine is less common.\n2️⃣ Most ships are in Good or Fair maintenance condition, with fewer classified as Critical.\n3️⃣ Long-haul and Coastal routes are the most frequent, suggesting significant international and regional shipping activity.\n4️⃣ Bulk Carriers and Container Ships are the most common ship types, while Tankers and Fish Carriers are less frequent.\n5️⃣ Calm and Moderate weather conditions are predominant, indicating generally favorable sailing conditions."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#engine-power-vs.-speed",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#engine-power-vs.-speed",
    "title": "Take-home Exercise 1",
    "section": "6️⃣ Engine Power vs. Speed",
    "text": "6️⃣ Engine Power vs. Speed\n\nggplot(data, aes(x = Speed_Over_Ground_knots, y = Engine_Power_kW)) +\n  geom_point(alpha = 0.5, color = \"#0073C2\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"Engine Power vs. Speed\",\n       x = \"Speed (knots)\",\n       y = \"Engine Power (kW)\") +\n  theme_custom"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#interactive-analysis",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#interactive-analysis",
    "title": "Take-home Exercise 1",
    "section": "8️⃣ Interactive Analysis",
    "text": "8️⃣ Interactive Analysis\n\n# Interactive scatter plot\nggplotly(\n  ggplot(data, aes(x = Speed_Over_Ground_knots, y = Efficiency_nm_per_kWh, color = Ship_Type)) +\n    geom_point(alpha = 0.7) +\n    labs(title = \"Speed vs Efficiency (Interactive)\",\n         x = \"Speed (knots)\",\n         y = \"Efficiency (nm/kWh)\") +\n    theme_custom\n)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#recommendations",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#recommendations",
    "title": "Take-home Exercise 1",
    "section": "10️⃣ Recommendations",
    "text": "10️⃣ Recommendations\n\n\n\n### Recommendations\n\n\n1. Optimize ship speeds based on efficiency data to reduce fuel costs.\n\n\n2. Investigate specific ship types that show lower efficiency for design improvements.\n\n\n3. Utilize real-time monitoring to adjust operations dynamically for better performance."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-analysis-in-tabs",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#exploratory-data-analysis-in-tabs",
    "title": "Take-home Exercise 1",
    "section": "4️⃣ Exploratory Data Analysis in Tabs",
    "text": "4️⃣ Exploratory Data Analysis in Tabs\n\n## Exploratory Data Analysis {.tabset}\n\n### Speed Distribution\nggplot(data, aes(x = Speed_Over_Ground_knots)) +\n  geom_histogram(fill = \"#69b3a2\", color = \"black\", bins = 20, alpha = 0.7) +\n  labs(title = \"Distribution of Ship Speeds\",\n       x = \"Speed (knots)\",\n       y = \"Count\") +\n  theme_custom\n\n\n\n\n\n\n\n\nggplot(data, aes(x = Speed_Over_Ground_knots)) +\n  geom_histogram(fill = \"#69b3a2\", color = \"black\", bins = 20, alpha = 0.7) +\n  labs(title = \"Distribution of Ship Speeds\",\n       x = \"Speed (knots)\",\n       y = \"Count\") +\n  theme_custom\n\n### Speed Distribution Code\nggplot(data, aes(x = Speed_Over_Ground_knots)) +\n  geom_histogram(fill = \"#69b3a2\", color = \"black\", bins = 20, alpha = 0.7) +\n  labs(title = \"Distribution of Ship Speeds\",\n       x = \"Speed (knots)\",\n       y = \"Count\") +\n  theme_custom\n\n### Engine Power vs. Speed\nggplot(data, aes(x = Speed_Over_Ground_knots, y = Engine_Power_kW)) +\n  geom_point(alpha = 0.5, color = \"#0073C2\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"Engine Power vs. Speed\",\n       x = \"Speed (knots)\",\n       y = \"Engine Power (kW)\") +\n  theme_custom\n\n### Engine Power vs. Speed Code\nggplot(data, aes(x = Speed_Over_Ground_knots, y = Engine_Power_kW)) +\n  geom_point(alpha = 0.5, color = \"#0073C2\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"Engine Power vs. Speed\",\n       x = \"Speed (knots)\",\n       y = \"Engine Power (kW)\") +\n  theme_custom\n\n### Efficiency Analysis\nggplot(data, aes(x = Ship_Type, y = Efficiency_nm_per_kWh, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.7) +\n  labs(title = \"Ship Efficiency Across Different Ship Types\",\n       x = \"Ship Type\",\n       y = \"Efficiency (nm/kWh)\") +\n  theme_custom +\n  theme(legend.position = \"none\")\n\n### Efficiency Analysis Code\nggplot(data, aes(x = Ship_Type, y = Efficiency_nm_per_kWh, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.7) +\n  labs(title = \"Ship Efficiency Across Different Ship Types\",\n       x = \"Ship Type\",\n       y = \"Efficiency (nm/kWh)\") +\n  theme_custom +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion-recommendations",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion-recommendations",
    "title": "Take-home Exercise 1",
    "section": "5️⃣ Conclusion & Recommendations",
    "text": "5️⃣ Conclusion & Recommendations\n\n\n\n### Key Findings\n\n\n1. Most ships operate within a speed range of 10-25 knots, with minor variations.\n\n\n2. Engine power increases with speed, but the relationship is not perfectly linear.\n\n\n3. Efficiency (nautical miles per kWh) varies significantly among ship types, indicating potential for optimization.\n\n\n4. Different ship types exhibit unique efficiency distributions, suggesting that targeted improvements could enhance performance.\n\n\n\n### Recommendations\n\n\n1. Optimize ship speeds based on efficiency data to reduce fuel costs.\n\n\n2. Investigate specific ship types that show lower efficiency for design improvements.\n\n\n3. Utilize real-time monitoring to adjust operations dynamically for better performance."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Ship performance is an essential factor in maritime operations, influencing fuel efficiency, speed, and cargo transport efficiency. This study aims to analyze ship performance data, cluster ships based on operational characteristics, and identify key patterns affecting ship efficiency.\nMaritime transport is the backbone of global trade, playing a crucial role in economic growth and sustainability. Efficient ship operations, fuel optimization, and cost management are key concerns for industry stakeholders. By analyzing ship performance data, we can uncover trends, improve decision-making, and explore solutions to reduce environmental impact.\n\n\n\nThe data set for this exercise is Ship Performance Clustering retrieved from Kaggle which contains attributes, including:\nNumerical Features:\n\nSpeed_Over_Ground_knots: Average speed of the ship over water (in knots).\nEngine_Power_kW: Engine power output (in kilowatts).\nDistance_Traveled_nm: Total distance traveled by the ship (in nautical miles).\nOperational_Cost_USD: Total operational cost per voyage (in USD).\nRevenue_per_Voyage_USD: Revenue generated per voyage (in USD).\nEfficiency_nm_per_kWh: Energy efficiency calculated in nautical miles per kilowatt-hour.\n\nCategorical Features:\n\nShip_Type: Type of ship (e.g., Tanker, Container Ship, Fish Carrier, Bulk Carrier).\nRoute_Type: Shipping route type (e.g., Short-haul, Long-haul, Transoceanic).\nEngine_Type: Type of engine (e.g., Diesel, Heavy Fuel Oil).\nMaintenance_Status: Maintenance condition of the ship (e.g., Fair, Critical, Good).\nWeather_Condition: Prevailing weather conditions during voyages (e.g., Calm, Moderate, Rough).\n\n\n\nCode\ndata_path &lt;- \"data/Ship_Performance_Dataset.csv\" \ndf &lt;- read.csv(data_path, stringsAsFactors = FALSE)\n\n\n\n\n\nThe objective of this analysis is to pre-process the data set, conduct Exploratory Data Analysis (EDA) and perform clustering to identify groups of ships with similar performance."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-packages",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-packages",
    "title": "Take-home Exercise 1",
    "section": "2. Loading Packages",
    "text": "2. Loading Packages\n\n\n\nDescription\nLibrary\n\n\n\n\nCore (Data & Visualization)\ntidyverse , ggplot2 , ggrepel , patchwork\n\n\nStyling & Themes\nggthemes , hrbrthemes\n\n\nInteractivity\nggiraph , plotly , DT\n\n\nStatistical & Model Insights\nggdist , ggridges , ggstatsplot , performance , see\n\n\nExploratory & Clustering\ncorrplot , heatmaply , GGally\n\n\nHierarchical Analysis\ntreemap , treemapify\n\n\n\nLet us install the above packages using Pacman.The pacman package is used to load required libraries without the need of being sure of having that particular package installed. The functions in this package are easier to use than their equivalent base functions. Coding time required is significantly reduced because of this package.\n\n\nCode\npacman::p_load(tidyverse, ggplot2, ggrepel, patchwork,ggthemes, hrbrthemes,\n               ggiraph, plotly, DT,ggdist, ggridges, ggstatsplot, \n               performance, see,corrplot, heatmaply, GGally,treemap, treemapify, skimr , dplyr)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#ship-performance-clustering-data",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#ship-performance-clustering-data",
    "title": "Take-home Exercise 1",
    "section": "3. Ship Performance Clustering Data",
    "text": "3. Ship Performance Clustering Data\n\n\nCode\n# View basic structure and summary of data\nstr(df)\n\n\n'data.frame':   2736 obs. of  18 variables:\n $ Date                   : chr  \"2023-06-04\" \"2023-06-11\" \"2023-06-18\" \"2023-06-25\" ...\n $ Ship_Type              : chr  \"Container Ship\" \"Fish Carrier\" \"Container Ship\" \"Bulk Carrier\" ...\n $ Route_Type             : chr  \"None\" \"Short-haul\" \"Long-haul\" \"Transoceanic\" ...\n $ Engine_Type            : chr  \"Heavy Fuel Oil (HFO)\" \"Steam Turbine\" \"Diesel\" \"Steam Turbine\" ...\n $ Maintenance_Status     : chr  \"Critical\" \"Good\" \"Fair\" \"Fair\" ...\n $ Speed_Over_Ground_knots: num  12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW        : num  2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm   : num  1031 1060 659 1127 1445 ...\n $ Draft_meters           : num  14.13 14.65 7.2 11.79 9.73 ...\n $ Weather_Condition      : chr  \"Moderate\" \"Rough\" \"Moderate\" \"Moderate\" ...\n $ Cargo_Weight_tons      : num  1959 162 178 1737 261 ...\n $ Operational_Cost_USD   : num  483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD : num  292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours  : num  25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh  : num  1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score  : num  1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count    : int  1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage: num  93.8 93.9 96.2 66.2 80 ...\n\n\nCode\nsummary(df)\n\n\n     Date            Ship_Type          Route_Type        Engine_Type       \n Length:2736        Length:2736        Length:2736        Length:2736       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Maintenance_Status Speed_Over_Ground_knots Engine_Power_kW\n Length:2736        Min.   :10.01           Min.   : 501   \n Class :character   1st Qu.:13.93           1st Qu.:1148   \n Mode  :character   Median :17.71           Median :1757   \n                    Mean   :17.60           Mean   :1758   \n                    3rd Qu.:21.28           3rd Qu.:2383   \n                    Max.   :25.00           Max.   :2999   \n Distance_Traveled_nm  Draft_meters    Weather_Condition  Cargo_Weight_tons\n Min.   :  50.43      Min.   : 5.002   Length:2736        Min.   :  50.23  \n 1st Qu.: 548.51      1st Qu.: 7.437   Class :character   1st Qu.: 553.98  \n Median :1037.82      Median : 9.919   Mode  :character   Median :1043.21  \n Mean   :1036.41      Mean   : 9.929                      Mean   :1032.57  \n 3rd Qu.:1540.93      3rd Qu.:12.413                      3rd Qu.:1527.72  \n Max.   :1998.34      Max.   :14.993                      Max.   :1999.13  \n Operational_Cost_USD Revenue_per_Voyage_USD Turnaround_Time_hours\n Min.   : 10092       Min.   : 50352         Min.   :12.02        \n 1st Qu.:131293       1st Qu.:290346         1st Qu.:26.17        \n Median :257158       Median :520177         Median :41.59        \n Mean   :255143       Mean   :521362         Mean   :41.75        \n 3rd Qu.:381797       3rd Qu.:750073         3rd Qu.:57.36        \n Max.   :499735       Max.   :999917         Max.   :71.97        \n Efficiency_nm_per_kWh Seasonal_Impact_Score Weekly_Voyage_Count\n Min.   :0.1002        Min.   :0.500         Min.   :1.000      \n 1st Qu.:0.4636        1st Qu.:0.758         1st Qu.:3.000      \n Median :0.7899        Median :1.009         Median :5.000      \n Mean   :0.7987        Mean   :1.004         Mean   :4.915      \n 3rd Qu.:1.1474        3rd Qu.:1.253         3rd Qu.:7.000      \n Max.   :1.4993        Max.   :1.499         Max.   :9.000      \n Average_Load_Percentage\n Min.   : 50.01         \n 1st Qu.: 62.70         \n Median : 75.50         \n Mean   : 75.22         \n 3rd Qu.: 87.72         \n Max.   :100.00"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "summary(ship_data)\n\n      Date             Ship_Type          Route_Type        Engine_Type       \n Min.   :2023-06-04   Length:2736        Length:2736        Length:2736       \n 1st Qu.:2023-09-10   Class :character   Class :character   Class :character  \n Median :2023-12-17   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2023-12-17                                                           \n 3rd Qu.:2024-03-24                                                           \n Max.   :2024-06-30                                                           \n Maintenance_Status Speed_Over_Ground_knots Engine_Power_kW\n Length:2736        Min.   :10.01           Min.   : 501   \n Class :character   1st Qu.:13.93           1st Qu.:1148   \n Mode  :character   Median :17.71           Median :1757   \n                    Mean   :17.60           Mean   :1758   \n                    3rd Qu.:21.28           3rd Qu.:2383   \n                    Max.   :25.00           Max.   :2999   \n Distance_Traveled_nm  Draft_meters    Weather_Condition  Cargo_Weight_tons\n Min.   :  50.43      Min.   : 5.002   Length:2736        Min.   :  50.23  \n 1st Qu.: 548.51      1st Qu.: 7.437   Class :character   1st Qu.: 553.98  \n Median :1037.82      Median : 9.919   Mode  :character   Median :1043.21  \n Mean   :1036.41      Mean   : 9.929                      Mean   :1032.57  \n 3rd Qu.:1540.93      3rd Qu.:12.413                      3rd Qu.:1527.72  \n Max.   :1998.34      Max.   :14.993                      Max.   :1999.13  \n Operational_Cost_USD Revenue_per_Voyage_USD Turnaround_Time_hours\n Min.   : 10092       Min.   : 50352         Min.   :12.02        \n 1st Qu.:131293       1st Qu.:290346         1st Qu.:26.17        \n Median :257158       Median :520177         Median :41.59        \n Mean   :255143       Mean   :521362         Mean   :41.75        \n 3rd Qu.:381797       3rd Qu.:750073         3rd Qu.:57.36        \n Max.   :499735       Max.   :999917         Max.   :71.97        \n Efficiency_nm_per_kWh Seasonal_Impact_Score Weekly_Voyage_Count\n Min.   :0.1002        Min.   :0.500         Min.   :1.000      \n 1st Qu.:0.4636        1st Qu.:0.758         1st Qu.:3.000      \n Median :0.7899        Median :1.009         Median :5.000      \n Mean   :0.7987        Mean   :1.004         Mean   :4.915      \n 3rd Qu.:1.1474        3rd Qu.:1.253         3rd Qu.:7.000      \n Max.   :1.4993        Max.   :1.499         Max.   :9.000      \n Average_Load_Percentage\n Min.   : 50.01         \n 1st Qu.: 62.70         \n Median : 75.50         \n Mean   : 75.22         \n 3rd Qu.: 87.72         \n Max.   :100.00         \n\n\nThis step provides an overview of the data types and summary statistics, which are essential for guiding subsequent analysis steps."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "In this webpage, you will find my learning journey and deliverables of ISSS608 whereby I share my Hands-ob Exercises, In-class Exercises, Take-home Exercises and Project"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Ship performance is an essential factor in maritime operations, influencing fuel efficiency, speed, and cargo transport efficiency. This study aims to analyze ship performance data, cluster ships based on operational characteristics, and identify key patterns affecting ship efficiency."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-data",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-data",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The dataset contains attributes related to ship performance, including: - Speed (Speed_Over_Ground_knots) - Engine Power (Engine_Power_kW) - Cargo Weight (Cargo_Weight_tons) - Efficiency (Efficiency_nm_per_kWh) - Operational Cost (Operational_Cost_USD) - Distance Traveled (Distance_Traveled_nm) - Ship Type (Ship_Type)\n\n\nCode\ndata_path &lt;- \"data/Ship_Performance_Dataset.csv\" \ndf &lt;- read.csv(data_path, stringsAsFactors = FALSE)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The objective of this analysis is to preprocess the dataset, conduct univariate and exploratory analyses, and perform clustering to identify groups of ships with similar performance characteristics."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-selection",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-selection",
    "title": "Take-home Exercise 1",
    "section": "4.1 Variable Selection",
    "text": "4.1 Variable Selection\nWe focus on selecting relevant variables that directly influence ship performance:\n\n\nCode\ndf_selected &lt;- df %&gt;% \n  select(Speed_Over_Ground_knots, Engine_Power_kW, Cargo_Weight_tons, Efficiency_nm_per_kWh, \n         Operational_Cost_USD, Distance_Traveled_nm, Ship_Type)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#handling-missing-values",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#handling-missing-values",
    "title": "Take-home Exercise 1",
    "section": "4.2 Handling Missing Values",
    "text": "4.2 Handling Missing Values\n\n\nCode\n# Check missing values\ncolSums(is.na(df_selected))\n\n\nSpeed_Over_Ground_knots         Engine_Power_kW       Cargo_Weight_tons \n                      0                       0                       0 \n  Efficiency_nm_per_kWh    Operational_Cost_USD    Distance_Traveled_nm \n                      0                       0                       0 \n              Ship_Type \n                      0 \n\n\nCode\n# Impute missing values with median\ndf_selected &lt;- df_selected %&gt;% mutate(across(everything(), ~ifelse(is.na(.), median(., na.rm = TRUE), .)))"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#recoding-categorical-variables",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#recoding-categorical-variables",
    "title": "Take-home Exercise 1",
    "section": "4.3 Recoding Categorical Variables",
    "text": "4.3 Recoding Categorical Variables\n\n\nCode\ndf_selected$Ship_Type &lt;- as.factor(df_selected$Ship_Type)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-type-conversion",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-type-conversion",
    "title": "Take-home Exercise 1",
    "section": "4.4 Data Type Conversion",
    "text": "4.4 Data Type Conversion\n\n\nCode\ncols_to_convert &lt;- c(\"Speed_Over_Ground_knots\", \"Engine_Power_kW\", \"Cargo_Weight_tons\", \n                     \"Efficiency_nm_per_kWh\", \"Operational_Cost_USD\", \"Distance_Traveled_nm\")\ndf_selected[cols_to_convert] &lt;- lapply(df_selected[cols_to_convert], as.numeric)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-creation",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-creation",
    "title": "Take-home Exercise 1",
    "section": "4.5 Variable Creation",
    "text": "4.5 Variable Creation\nCreate a new Fuel Consumption variable:\n\n\nCode\ndf_selected &lt;- df_selected %&gt;% \n  mutate(Fuel_Consumption = ifelse(!is.na(Operational_Cost_USD) & \n                                   !is.na(Distance_Traveled_nm) & \n                                   Distance_Traveled_nm &gt; 0, \n                                   Operational_Cost_USD / Distance_Traveled_nm, \n                                   NA))"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#speed-distribution",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#speed-distribution",
    "title": "Take-home Exercise 1",
    "section": "5.1 Speed Distribution",
    "text": "5.1 Speed Distribution\n\n\nCode\nggplot(df_selected, aes(x = Speed_Over_Ground_knots)) + geom_histogram(binwidth = 1, fill = \"blue\", alpha = 0.7) + theme_minimal()"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#fuel-consumption",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#fuel-consumption",
    "title": "Take-home Exercise 1",
    "section": "5.2 Fuel Consumption",
    "text": "5.2 Fuel Consumption\n\n\nCode\nggplot(df_selected, aes(x = Fuel_Consumption)) + geom_histogram(binwidth = 10, fill = \"red\", alpha = 0.7) + theme_minimal()"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#engine-power",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#engine-power",
    "title": "Take-home Exercise 1",
    "section": "5.3 Engine Power",
    "text": "5.3 Engine Power\n\n\nCode\nggplot(df_selected, aes(x = Engine_Power_kW)) + geom_histogram(binwidth = 100, fill = \"green\", alpha = 0.7) + theme_minimal()"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#correlation-analysis",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#correlation-analysis",
    "title": "Take-home Exercise 1",
    "section": "6.1 Correlation Analysis",
    "text": "6.1 Correlation Analysis\n\n\nCode\ncor_matrix &lt;- cor(df_selected %&gt;% select(-Ship_Type), use = \"complete.obs\")\nprint(cor_matrix)\n\n\n                        Speed_Over_Ground_knots Engine_Power_kW\nSpeed_Over_Ground_knots             1.000000000    -0.003299413\nEngine_Power_kW                    -0.003299413     1.000000000\nCargo_Weight_tons                  -0.005009368    -0.012654153\nEfficiency_nm_per_kWh               0.019273218    -0.017918307\nOperational_Cost_USD               -0.035824846    -0.012259954\nDistance_Traveled_nm               -0.010198092    -0.009120383\nFuel_Consumption                   -0.031466679     0.010874916\n                        Cargo_Weight_tons Efficiency_nm_per_kWh\nSpeed_Over_Ground_knots      -0.005009368          0.0192732183\nEngine_Power_kW              -0.012654153         -0.0179183072\nCargo_Weight_tons             1.000000000          0.0061779094\nEfficiency_nm_per_kWh         0.006177909          1.0000000000\nOperational_Cost_USD         -0.036499362          0.0032575357\nDistance_Traveled_nm          0.013680030          0.0032288577\nFuel_Consumption             -0.043979058          0.0006207901\n                        Operational_Cost_USD Distance_Traveled_nm\nSpeed_Over_Ground_knots         -0.035824846         -0.010198092\nEngine_Power_kW                 -0.012259954         -0.009120383\nCargo_Weight_tons               -0.036499362          0.013680030\nEfficiency_nm_per_kWh            0.003257536          0.003228858\nOperational_Cost_USD             1.000000000          0.002468337\nDistance_Traveled_nm             0.002468337          1.000000000\nFuel_Consumption                 0.335024560         -0.545222051\n                        Fuel_Consumption\nSpeed_Over_Ground_knots    -0.0314666793\nEngine_Power_kW             0.0108749165\nCargo_Weight_tons          -0.0439790580\nEfficiency_nm_per_kWh       0.0006207901\nOperational_Cost_USD        0.3350245602\nDistance_Traveled_nm       -0.5452220506\nFuel_Consumption            1.0000000000"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-fuel-consumption-by-ship-type",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-fuel-consumption-by-ship-type",
    "title": "Take-home Exercise 1",
    "section": "6.2 Comparing Fuel Consumption by Ship Type",
    "text": "6.2 Comparing Fuel Consumption by Ship Type\n\n\nCode\nggplot(df_selected, aes(x = Ship_Type, y = Fuel_Consumption, fill = Ship_Type)) + \n  geom_boxplot() + theme_minimal()"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-speed-and-engine-power",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-speed-and-engine-power",
    "title": "Take-home Exercise 1",
    "section": "6.3 Comparing Speed and Engine Power",
    "text": "6.3 Comparing Speed and Engine Power\n\n\nCode\nggplot(df_selected, aes(x = Speed_Over_Ground_knots, y = Engine_Power_kW)) + \n  geom_point(alpha = 0.7) + theme_minimal()"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#standardizing-data",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#standardizing-data",
    "title": "Take-home Exercise 1",
    "section": "7.1 Standardizing Data",
    "text": "7.1 Standardizing Data\n\n\nCode\ndf_scaled &lt;- scale(df_selected %&gt;% select(-Ship_Type))"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#determining-optimal-clusters",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#determining-optimal-clusters",
    "title": "Take-home Exercise 1",
    "section": "7.2 Determining Optimal Clusters",
    "text": "7.2 Determining Optimal Clusters\n\n\nCode\nfviz_nbclust(df_scaled, kmeans, method = \"wss\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#k-means-clustering",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#k-means-clustering",
    "title": "Take-home Exercise 1",
    "section": "7.3 K-Means Clustering",
    "text": "7.3 K-Means Clustering\n\n\nCode\nset.seed(123)\nkmeans_result &lt;- kmeans(df_scaled, centers = 3, nstart = 25)\ndf_selected$Cluster &lt;- as.factor(kmeans_result$cluster)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualizing-clusters",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualizing-clusters",
    "title": "Take-home Exercise 1",
    "section": "7.4 Visualizing Clusters",
    "text": "7.4 Visualizing Clusters\n\n\nCode\nfviz_cluster(kmeans_result, data = df_scaled)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "4. Data Wrangling",
    "text": "4. Data Wrangling\nThe following flowchart shows the main variables used and created in this study.\n\n\n4.1 Variable Selection\nWe focus on selecting relevant variables that directly influence ship performance:\n\n\nCode\nggstatsplot::ggcorrmat(\n  data = df, \n  cor.vars = which(sapply(df, is.numeric)),  # Automatically detect numerical columns\n  colors = c(\"red\", \"white\", \"blue\"),  # Move colors OUTSIDE ggcorrplot.args\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for Ship Performance Dataset\",\n  subtitle = \"Showing significant correlations (p &lt; 0.05)\"\n)\n\n\n\n\n\n\n\n\n\nBased on correlations and domain relevance, the key numerical variables are:\n✅ Speed Over Ground (knots) →Determines fuel efficiency and travel time.\n✅ Distance_Traveled_nm → Affects cost and fuel efficiency.\n✅ Operational_Cost_USD → Directly impacts business profitability.\n✅ Efficiency_nm_per_kWh → Core metric for ship fuel efficiency analysis.\n✅ Engine_Power_kW → Impacts voyage frequency and fuel use.\n✅ Cargo_Weight_tons → Affects speed and efficiency.\n\n\n\nCode\nlibrary(dplyr)  # Load dplyr to use %&gt;%\ndf_selected &lt;- df %&gt;%\n  select(Speed_Over_Ground_knots, Engine_Power_kW, Cargo_Weight_tons, \n         Efficiency_nm_per_kWh, Operational_Cost_USD, Distance_Traveled_nm)\n\n\n\n\n4.2 Handling Missing Values\nWe know that there are no missing values.\n\n\nCode\n# Check missing values\ncolSums(is.na(df))\n\n\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n\n\n\n\n4.3 Categorical Variable selection\n\n\nCode\n  # If not installed\nlibrary(car)\n\n# Perform ANOVA for categorical variables on Efficiency\nanova_efficiency &lt;- list()\n\nfor (cat_var in c(\"Ship_Type\", \"Route_Type\", \"Engine_Type\", \"Maintenance_Status\", \"Weather_Condition\")) {\n  formula &lt;- as.formula(paste(\"Efficiency_nm_per_kWh ~\", cat_var))\n  model &lt;- aov(formula, data = df)\n  anova_efficiency[[cat_var]] &lt;- summary(model)\n}\n\n# Display ANOVA results\nanova_efficiency\n\n\n$Ship_Type\n              Df Sum Sq Mean Sq F value Pr(&gt;F)\nShip_Type      4    0.9  0.2157   1.325  0.258\nResiduals   2731  444.6  0.1628               \n\n$Route_Type\n              Df Sum Sq Mean Sq F value Pr(&gt;F)  \nRoute_Type     4    1.3  0.3339   2.053 0.0844 .\nResiduals   2731  444.2  0.1626                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Engine_Type\n              Df Sum Sq Mean Sq F value Pr(&gt;F)  \nEngine_Type    3    1.5  0.4960   3.052 0.0275 *\nResiduals   2732  444.0  0.1625                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Maintenance_Status\n                     Df Sum Sq Mean Sq F value Pr(&gt;F)\nMaintenance_Status    3    0.6  0.1850   1.136  0.333\nResiduals          2732  444.9  0.1629               \n\n$Weather_Condition\n                    Df Sum Sq Mean Sq F value Pr(&gt;F)  \nWeather_Condition    3    1.2  0.3875   2.382 0.0676 .\nResiduals         2732  444.3  0.1626                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\n# Perform ANOVA for categorical variables on Operational Cost\nanova_cost &lt;- list()\n\nfor (cat_var in c(\"Ship_Type\", \"Route_Type\", \"Engine_Type\", \"Maintenance_Status\", \"Weather_Condition\")) {\n  formula &lt;- as.formula(paste(\"Operational_Cost_USD ~\", cat_var))\n  model &lt;- aov(formula, data = df)\n  anova_cost[[cat_var]] &lt;- summary(model)\n}\n\n# Display ANOVA results\nanova_cost\n\n\n$Ship_Type\n              Df    Sum Sq   Mean Sq F value Pr(&gt;F)\nShip_Type      4 2.493e+10 6.234e+09   0.314  0.869\nResiduals   2731 5.427e+13 1.987e+10               \n\n$Route_Type\n              Df    Sum Sq   Mean Sq F value Pr(&gt;F)\nRoute_Type     4 1.059e+11 2.647e+10   1.334  0.255\nResiduals   2731 5.418e+13 1.984e+10               \n\n$Engine_Type\n              Df    Sum Sq   Mean Sq F value Pr(&gt;F)\nEngine_Type    3 1.252e+10 4.172e+09    0.21   0.89\nResiduals   2732 5.428e+13 1.987e+10               \n\n$Maintenance_Status\n                     Df    Sum Sq   Mean Sq F value Pr(&gt;F)\nMaintenance_Status    3 1.775e+10 5.918e+09   0.298  0.827\nResiduals          2732 5.427e+13 1.987e+10               \n\n$Weather_Condition\n                    Df    Sum Sq   Mean Sq F value Pr(&gt;F)\nWeather_Condition    3 9.117e+10 3.039e+10   1.532  0.204\nResiduals         2732 5.420e+13 1.984e+10               \n\n\nThe ANOVA results show that Engine Type significantly impacts ship efficiency (Efficiency_nm_per_kWh) (p = 0.0274), while Weather Condition is borderline significant (p = 0.0676). Ship Type, Route Type, and Maintenance Status do not show a strong influence.\nFor operational cost (Operational_Cost_USD), no categorical variables are significant (p &gt; 0.20), suggesting that costs are driven by numerical factors like distance traveled, cargo weight, and fuel consumption.\nThus, Engine Type is the most important categorical variable for ship efficiency, while operational cost analysis should focus on numerical variables."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#clustering-analysis",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#clustering-analysis",
    "title": "Take-home Exercise 1",
    "section": "7. Clustering Analysis",
    "text": "7. Clustering Analysis\n\n7.1 Standardizing Data\n\n\nCode\n# Select numerical features for clustering\ndf_cluster &lt;- df %&gt;%\n  select(Speed_Over_Ground_knots, Engine_Power_kW, Cargo_Weight_tons, \n         Efficiency_nm_per_kWh, Operational_Cost_USD, Distance_Traveled_nm) %&gt;%\n  na.omit()  # Remove missing values\n\n\n\n\n7.2 Normalize Data for Better Clustering\n\n\nCode\n# Install required package if not installed\ninstall.packages(\"scales\", repos = \"https://cloud.r-project.org/\")\n\n\npackage 'scales' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\rbu93\\AppData\\Local\\Temp\\RtmpEbfpna\\downloaded_packages\n\n\nCode\nlibrary(scales)\n\n\n\n# Normalize data\ndf_scaled &lt;- as.data.frame(scale(df_cluster))\n\n\n\n\n7.3 Determine Optimal Number of Clusters\n\n\nCode\n# Set a CRAN mirror before installing\nchooseCRANmirror(graphics = FALSE, ind = 1)\n\n# Install packages again\ninstall.packages(\"NbClust\", dependencies = TRUE)\n\n\npackage 'NbClust' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\rbu93\\AppData\\Local\\Temp\\RtmpEbfpna\\downloaded_packages\n\n\nCode\ninstall.packages(\"factoextra\", dependencies = TRUE)\n\n\npackage 'factoextra' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\rbu93\\AppData\\Local\\Temp\\RtmpEbfpna\\downloaded_packages\n\n\n\n\nCode\n# Load libraries\nlibrary(factoextra)\nlibrary(NbClust)\n\n# Elbow Method\nfviz_nbclust(df_scaled, kmeans, method = \"wss\") +\n  labs(title = \"Elbow Method for Optimal K\")\n\n\n\n\n\n\n\n\n\nCode\n# Silhouette Method\nfviz_nbclust(df_scaled, kmeans, method = \"silhouette\") +\n  labs(title = \"Silhouette Method for Optimal K\")\n\n\n\n\n\n\n\n\n\n\n\n7.4 Perform K-Means Clustering\n\n\nCode\n# Set optimal number of clusters (from Elbow & Silhouette methods)\nk_optimal &lt;- 3\n\n# Run K-Means\nset.seed(123)  # Ensure reproducibility\nkmeans_model &lt;- kmeans(df_scaled, centers = k_optimal, nstart = 25)\n\n# Add cluster labels to the original dataset\ndf$Cluster &lt;- as.factor(kmeans_model$cluster)\n\n\n\n\n7.5 Visualize Clusters\n\n\nCode\n# Install required package\ninstall.packages(\"ggfortify\")\n\n\npackage 'ggfortify' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\rbu93\\AppData\\Local\\Temp\\RtmpEbfpna\\downloaded_packages\n\n\nCode\n# Load library\nlibrary(ggfortify)\n\n# Plot PCA with clusters\nautoplot(prcomp(df_scaled), data = df, colour = \"Cluster\", shape = \"Cluster\", frame = TRUE) +\n  labs(title = \"PCA Plot of Clusters\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| fig-width: 12\n#| fig-height: 8\n\n# Load libraries\nlibrary(ggplot2)\nlibrary(RColorBrewer)\n\n# Define pastel colors\npastel_colors &lt;- brewer.pal(n = 5, name = \"Pastel1\")  # Adjust for number of clusters\n\n# Boxplot with pastel colors\nggplot(df, aes(x = Cluster, y = Efficiency_nm_per_kWh, fill = Cluster)) +\n  geom_boxplot(alpha = 0.8, outlier.color = \"red\", outlier.shape = 16, outlier.size = 3) +  # Outliers in red\n  scale_fill_manual(values = pastel_colors) +  # Use pastel colors\n  labs(title = \"Fuel Efficiency Across Clusters\",\n       x = \"Cluster\", y = \"Efficiency (nm per kWh)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(face = \"bold\", size = 16),\n        axis.text.x = element_text(size = 12),\n        axis.text.y = element_text(size = 12))\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Bar plot with pastel colors\nggplot(df, aes(x = Ship_Type, fill = Cluster)) +\n  geom_bar(position = \"dodge\") +\n  scale_fill_manual(values = pastel_colors) +  # Apply pastel colors\n  labs(title = \"Ship Type Distribution Across Clusters\",\n       x = \"Ship Type\", y = \"Count\") +\n  theme_minimal() +\n  theme(plot.title = element_text(face = \"bold\", size = 16),\n        axis.text.x = element_text(size = 12, angle = 30, hjust = 1),\n        axis.text.y = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nInsights:\nAfter running K-means, clusters may represent:\n\nCluster 1: High-speed, low-cost, high-efficiency ships (e.g., Container Ships).\nCluster 2: Heavy cargo ships with moderate speeds and higher fuel costs (e.g., Bulk Carriers).\nCluster 3: Slow-speed, long-distance tankers with high operational costs (e.g., Oil Tankers)."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-and-conclusion",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-and-conclusion",
    "title": "Take-home Exercise 1",
    "section": "9. Summary and Conclusion",
    "text": "9. Summary and Conclusion\nThis analysis looked at key factors influencing ship performance, focusing on efficiency, speed, operational cost, and voyage distance. Using EDA, clustering, and treemaps, we identified meaningful patterns across different ship types, engine types, and route types.\n\nBulk Carriers and Container Ships handle the longest routes but show varying efficiency levels. Short-haul and coastal ships, while covering shorter distances, tend to be more fuel-efficient.\nDiesel engines are widely used and provide better cost efficiency compared to Steam Turbines, which have significantly higher operational costs.\nClustering grouped ships based on efficiency, revealing performance differences across ship types and operational characteristics. Some clusters showed cost-effective ships, while others highlighted high-cost, low-efficiency operations."
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#references-and-inspiration",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#references-and-inspiration",
    "title": "Take-home Exercise 1",
    "section": "10. References and Inspiration",
    "text": "10. References and Inspiration\n\nhttps://isss608-ay2024-25jan.netlify.app/\nhttps://clauswilke.com/dataviz/"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#ship-performance-data",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#ship-performance-data",
    "title": "Take-home Exercise 1",
    "section": "3. Ship Performance Data",
    "text": "3. Ship Performance Data\nThe Ship Performance Data set contains 2736 observations and 18 variables, capturing key operational metrics of various ship types in the Gulf of Guinea.\n\n\nCode\n# Structure of data\nglimpse(df)\n\n\nRows: 2,736\nColumns: 18\n$ Date                    &lt;chr&gt; \"2023-06-04\", \"2023-06-11\", \"2023-06-18\", \"202…\n$ Ship_Type               &lt;chr&gt; \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              &lt;chr&gt; \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             &lt;chr&gt; \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      &lt;chr&gt; \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots &lt;dbl&gt; 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         &lt;dbl&gt; 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    &lt;dbl&gt; 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            &lt;dbl&gt; 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       &lt;chr&gt; \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       &lt;dbl&gt; 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    &lt;dbl&gt; 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  &lt;dbl&gt; 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   &lt;dbl&gt; 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   &lt;dbl&gt; 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   &lt;dbl&gt; 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     &lt;int&gt; 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage &lt;dbl&gt; 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n\n\n\n\nCode\n# Summary of data\nskim(df)\n\n\n\nData summary\n\n\nName\ndf\n\n\nNumber of rows\n2736\n\n\nNumber of columns\n18\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n12\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nDate\n0\n1\n10\n10\n0\n57\n0\n\n\nShip_Type\n0\n1\n4\n14\n0\n5\n0\n\n\nRoute_Type\n0\n1\n4\n12\n0\n5\n0\n\n\nEngine_Type\n0\n1\n4\n20\n0\n4\n0\n\n\nMaintenance_Status\n0\n1\n4\n8\n0\n4\n0\n\n\nWeather_Condition\n0\n1\n4\n8\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nSpeed_Over_Ground_knots\n0\n1\n17.60\n4.31\n10.01\n13.93\n17.71\n21.28\n25.00\n▇▇▇▇▇\n\n\nEngine_Power_kW\n0\n1\n1757.61\n717.00\n501.03\n1148.10\n1757.49\n2382.59\n2998.73\n▇▇▇▇▇\n\n\nDistance_Traveled_nm\n0\n1\n1036.41\n568.63\n50.43\n548.51\n1037.82\n1540.93\n1998.34\n▇▇▇▇▇\n\n\nDraft_meters\n0\n1\n9.93\n2.88\n5.00\n7.44\n9.92\n12.41\n14.99\n▇▇▇▇▇\n\n\nCargo_Weight_tons\n0\n1\n1032.57\n558.70\n50.23\n553.98\n1043.21\n1527.72\n1999.13\n▇▇▇▇▇\n\n\nOperational_Cost_USD\n0\n1\n255143.34\n140890.48\n10092.31\n131293.38\n257157.65\n381796.93\n499734.87\n▇▇▇▇▇\n\n\nRevenue_per_Voyage_USD\n0\n1\n521362.06\n271211.63\n50351.81\n290346.39\n520176.93\n750072.79\n999916.70\n▇▇▇▇▇\n\n\nTurnaround_Time_hours\n0\n1\n41.75\n17.63\n12.02\n26.17\n41.59\n57.36\n71.97\n▇▇▇▇▇\n\n\nEfficiency_nm_per_kWh\n0\n1\n0.80\n0.40\n0.10\n0.46\n0.79\n1.15\n1.50\n▇▇▇▇▇\n\n\nSeasonal_Impact_Score\n0\n1\n1.00\n0.29\n0.50\n0.76\n1.01\n1.25\n1.50\n▇▇▇▇▇\n\n\nWeekly_Voyage_Count\n0\n1\n4.91\n2.60\n1.00\n3.00\n5.00\n7.00\n9.00\n▇▇▃▇▇\n\n\nAverage_Load_Percentage\n0\n1\n75.22\n14.51\n50.01\n62.70\n75.50\n87.72\n100.00\n▇▇▇▇▇\n\n\n\n\n\n\n\nCode\n# Interactive dataset view\ndatatable(df, options = list(scrollX = TRUE, pageLength = 10))\n\n\n\n\n\n\n\n\nCode\n#Check for duplicates\ndf[duplicated(df),]\n\n\n [1] Date                    Ship_Type               Route_Type             \n [4] Engine_Type             Maintenance_Status      Speed_Over_Ground_knots\n [7] Engine_Power_kW         Distance_Traveled_nm    Draft_meters           \n[10] Weather_Condition       Cargo_Weight_tons       Operational_Cost_USD   \n[13] Revenue_per_Voyage_USD  Turnaround_Time_hours   Efficiency_nm_per_kWh  \n[16] Seasonal_Impact_Score   Weekly_Voyage_Count     Average_Load_Percentage\n&lt;0 rows&gt; (or 0-length row.names)"
  },
  {
    "objectID": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#tree-map",
    "href": "Take-Home_Ex/Take-home_Ex01/Take-home_Ex01.html#tree-map",
    "title": "Take-home Exercise 1",
    "section": "8. Tree map",
    "text": "8. Tree map\n8.1 Treemap: Ship Type & Route Type\n\n\nCode\n# Load libraries\nlibrary(treemap)\nlibrary(RColorBrewer)\nlibrary(dplyr)\n\n# Summarize data to aggregate continuous variables for each category\ntreemap_data &lt;- df %&gt;%\n  group_by(Route_Type, Ship_Type) %&gt;%\n  summarise(Total_Distance = sum(Distance_Traveled_nm, na.rm = TRUE), \n            Avg_Efficiency = mean(Efficiency_nm_per_kWh, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Define pastel color palette\npastel_palette &lt;- brewer.pal(n = 9, name = \"Pastel2\")  \n\n# Create treemap with Efficiency as color and Distance as size\ntreemap(treemap_data,\n        index = c(\"Route_Type\", \"Ship_Type\"),  # Hierarchical categories\n        vSize = \"Total_Distance\",  # Size = Total Distance\n        vColor = \"Avg_Efficiency\",  # Color = Average Efficiency\n        type = \"value\",  # Uses continuous variable for color\n        title = \"Ship Type & Route Type Treemap (Efficiency & Distance)\",\n        palette = pastel_palette,  # Apply pastel color scale\n        border.col = \"white\")\n\n\n\n\n\n\n\n\n\nInsights:\nShip Type & Route Type → Long-haul & transoceanic ships cover the most distance but vary in efficiency\n8.2 Treemap: Ship Type & Route Type\n\n\nCode\n# Summarize data for Engine Type & Ship Type\ntreemap_data_engine &lt;- df %&gt;%\n  group_by(Engine_Type, Ship_Type) %&gt;%\n  summarise(Total_Cargo = sum(Cargo_Weight_tons, na.rm = TRUE), \n            Avg_Cost = mean(Operational_Cost_USD, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Define pastel color palette\npastel_palette_cost &lt;- brewer.pal(n = 9, name = \"Pastel1\")  \n\n# Create treemap with Operational Cost as color and Cargo Weight as size\ntreemap(treemap_data_engine,\n        index = c(\"Engine_Type\", \"Ship_Type\"),  # Hierarchical categories\n        vSize = \"Total_Cargo\",  # Size = Total Cargo\n        vColor = \"Avg_Cost\",  # Color = Average Operational Cost\n        type = \"value\",  # Uses continuous variable for color\n        title = \"Engine Type & Ship Type Treemap (Cost & Cargo)\",\n        palette = pastel_palette_cost,  # Apply pastel color scale\n        border.col = \"white\")\n\n\n\n\n\n\n\n\n\nInsights:\nEngine Type & Ship Type → Diesel engines are cost-effective, while Steam Turbines are expensive but still in use for heavy operations."
  }
]